{"version":3,"file":"GrokAI-klVwWmmc.js","sources":["../../src/components/grok/GrokSustainabilityChat.tsx","../../src/components/grok/GrokConfig.tsx","../../src/pages/GrokAI.tsx"],"sourcesContent":["\r\nimport React, { useState } from 'react';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Textarea } from '@/components/ui/textarea';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { useGrok } from '@/contexts/GrokContext';\r\nimport { Leaf, FileText, Shield, Star, Send, Lightbulb } from 'lucide-react';\r\nimport { toast } from 'sonner';\r\n\r\nconst GrokSustainabilityChat = () => {\r\n  const [userMessage, setUserMessage] = useState('');\r\n  const [conversation, setConversation] = useState<Array<{role: 'user' | 'assistant', content: string}>>([]);\r\n  const { askGrok, isProcessing, isConfigured } = useGrok();\r\n\r\n  const sustainabilityActions = [\r\n    {\r\n      id: 'material-recommendations',\r\n      title: 'Material Recommendations',\r\n      description: 'Get sustainable material alternatives',\r\n      icon: <Leaf className=\"h-4 w-4\" />,\r\n      mode: 'material_analysis' as const,\r\n      prompt: 'What are the most sustainable construction materials for residential buildings in Australia, and what are their carbon footprints?'\r\n    },\r\n    {\r\n      id: 'ncc-compliance',\r\n      title: 'NCC 2025 Compliance',\r\n      description: 'Check latest building code requirements',\r\n      icon: <FileText className=\"h-4 w-4\" />,\r\n      mode: 'compliance_check' as const,\r\n      prompt: 'What are the key changes in NCC 2025 for thermal performance and energy efficiency requirements?'\r\n    },\r\n    {\r\n      id: 'green-star',\r\n      title: 'Green Star Certification',\r\n      description: 'Learn about Green Star requirements',\r\n      icon: <Star className=\"h-4 w-4\" />,\r\n      mode: 'sustainability_advisor' as const,\r\n      prompt: 'What are the requirements for achieving Green Star certification and how can I optimize my project for it?'\r\n    },\r\n    {\r\n      id: 'nabers-ratings',\r\n      title: 'NABERS Ratings',\r\n      description: 'Understand NABERS energy ratings',\r\n      icon: <Shield className=\"h-4 w-4\" />,\r\n      mode: 'compliance_check' as const,\r\n      prompt: 'How do NABERS energy ratings work and what changes came into effect in January 2025?'\r\n    }\r\n  ];\r\n\r\n  const handleQuickAction = async (prompt: string, mode: 'material_analysis' | 'compliance_check' | 'sustainability_advisor') => {\r\n    if (!isConfigured) {\r\n      toast.error('Grok AI is not configured. Please configure it first.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await askGrok(prompt, {}, mode);\r\n      \r\n      setConversation(prev => [\r\n        ...prev,\r\n        { role: 'user', content: prompt },\r\n        { role: 'assistant', content: response.response || response.text || 'No response received' }\r\n      ]);\r\n    } catch (error) {\r\n      toast.error('Failed to get AI response. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleSendMessage = async () => {\r\n    if (!userMessage.trim() || !isConfigured) return;\r\n\r\n    try {\r\n      const response = await askGrok(userMessage, {}, 'sustainability_advisor');\r\n      \r\n      setConversation(prev => [\r\n        ...prev,\r\n        { role: 'user', content: userMessage },\r\n        { role: 'assistant', content: response.response || response.text || 'No response received' }\r\n      ]);\r\n      \r\n      setUserMessage('');\r\n    } catch (error) {\r\n      toast.error('Failed to send message. Please try again.');\r\n    }\r\n  };\r\n\r\n  if (!isConfigured) {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle className=\"flex items-center gap-2\">\r\n            <Leaf className=\"h-5 w-5\" />\r\n            Grok Sustainability Assistant\r\n          </CardTitle>\r\n          <CardDescription>\r\n            AI-powered sustainability advice, compliance guidance, and Green Star certification help\r\n          </CardDescription>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className=\"text-center py-8\">\r\n            <Leaf className=\"h-16 w-16 mx-auto mb-4 text-muted-foreground\" />\r\n            <h3 className=\"text-lg font-medium mb-2\">Grok AI Not Configured</h3>\r\n            <p className=\"text-muted-foreground mb-4\">\r\n              Configure Grok AI to get expert sustainability advice and compliance guidance.\r\n            </p>\r\n            <Button onClick={() => window.location.href = '/grok-ai'}>\r\n              Configure Grok AI\r\n            </Button>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle className=\"flex items-center gap-2\">\r\n            <Leaf className=\"h-5 w-5\" />\r\n            Grok Sustainability Assistant\r\n            <Badge variant=\"secondary\">Specialized for Construction</Badge>\r\n          </CardTitle>\r\n          <CardDescription>\r\n            Get expert advice on sustainable construction, compliance, and certifications\r\n          </CardDescription>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-6\">\r\n            {sustainabilityActions.map(action => (\r\n              <Button\r\n                key={action.id}\r\n                variant=\"outline\"\r\n                className=\"h-auto p-4 flex flex-col items-start text-left\"\r\n                onClick={() => handleQuickAction(action.prompt, action.mode)}\r\n                disabled={isProcessing}\r\n              >\r\n                <div className=\"flex items-center gap-2 mb-2\">\r\n                  {action.icon}\r\n                  <span className=\"font-medium\">{action.title}</span>\r\n                </div>\r\n                <span className=\"text-sm text-muted-foreground\">{action.description}</span>\r\n              </Button>\r\n            ))}\r\n          </div>\r\n\r\n          {conversation.length > 0 && (\r\n            <div className=\"space-y-4 mb-6 max-h-96 overflow-y-auto\">\r\n              {conversation.map((message, index) => (\r\n                <div key={index} className={`flex ${message.role === 'user' ? 'justify-end' : 'justify-start'}`}>\r\n                  <div className={`max-w-[80%] p-3 rounded-lg ${\r\n                    message.role === 'user' \r\n                      ? 'bg-primary text-primary-foreground' \r\n                      : 'bg-muted'\r\n                  }`}>\r\n                    <p className=\"text-sm whitespace-pre-wrap\">{message.content}</p>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"flex gap-2\">\r\n            <Textarea\r\n              placeholder=\"Ask about sustainable materials, NCC 2025 compliance, Green Star certification, NABERS ratings...\"\r\n              value={userMessage}\r\n              onChange={(e) => setUserMessage(e.target.value)}\r\n              className=\"flex-1\"\r\n              rows={3}\r\n            />\r\n            <Button \r\n              onClick={handleSendMessage}\r\n              disabled={!userMessage.trim() || isProcessing}\r\n              size=\"sm\"\r\n            >\r\n              <Send className=\"h-4 w-4\" />\r\n            </Button>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GrokSustainabilityChat;\r\n","\r\nimport React, { useState } from 'react';\r\nimport { useGrok } from '@/contexts/GrokContext';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Key, Check, X } from 'lucide-react';\r\nimport GrokUsageDisplay from './GrokUsageDisplay';\r\n\r\ninterface GrokConfigProps {\r\n  onComplete?: () => void;\r\n}\r\n\r\nconst GrokConfig: React.FC<GrokConfigProps> = ({ onComplete }) => {\r\n  const { isConfigured, configureGrok, resetGrok } = useGrok();\r\n  const [apiKey, setApiKey] = useState('');\r\n  \r\n  const handleConfigure = () => {\r\n    configureGrok(apiKey);\r\n    setApiKey('');\r\n    if (onComplete) onComplete();\r\n  };\r\n  \r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <Card className=\"w-full max-w-md mx-auto\">\r\n        <CardHeader>\r\n          <CardTitle className=\"flex items-center justify-between\">\r\n            Grok AI Configuration\r\n            {isConfigured ? (\r\n              <Badge variant=\"outline\" className=\"bg-green-100 text-green-800 border-green-300\">\r\n                <Check className=\"h-3 w-3 mr-1\" /> Configured\r\n              </Badge>\r\n            ) : (\r\n              <Badge variant=\"outline\" className=\"bg-amber-100 text-amber-800 border-amber-300\">\r\n                <X className=\"h-3 w-3 mr-1\" /> Not Configured\r\n              </Badge>\r\n            )}\r\n          </CardTitle>\r\n          <CardDescription>\r\n            Connect CarbonConstruct to Grok AI for advanced sustainability analysis\r\n          </CardDescription>\r\n        </CardHeader>\r\n        \r\n        <CardContent>\r\n          <div className=\"space-y-4\">\r\n            <div className=\"space-y-2\">\r\n              <label htmlFor=\"api-key\" className=\"text-sm font-medium\">\r\n                Grok API Key\r\n              </label>\r\n              <div className=\"flex\">\r\n                <div className=\"relative flex-grow\">\r\n                  <Key className=\"absolute left-3 top-2.5 h-4 w-4 text-muted-foreground\" />\r\n                  <Input\r\n                    id=\"api-key\"\r\n                    type=\"password\"\r\n                    placeholder=\"Enter your xAI Grok API key\"\r\n                    value={apiKey}\r\n                    onChange={(e) => setApiKey(e.target.value)}\r\n                    className=\"pl-9\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <p className=\"text-xs text-muted-foreground\">\r\n                Your API key is securely stored and used only for communication with Grok AI.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </CardContent>\r\n        \r\n        <CardFooter className=\"flex justify-between\">\r\n          {isConfigured ? (\r\n            <Button variant=\"destructive\" onClick={resetGrok}>\r\n              Reset API Key\r\n            </Button>\r\n          ) : (\r\n            <Button variant=\"ghost\">Cancel</Button>\r\n          )}\r\n          <Button \r\n            onClick={handleConfigure} \r\n            disabled={!apiKey.trim()}\r\n          >\r\n            {isConfigured ? 'Update' : 'Configure'} Grok AI\r\n          </Button>\r\n        </CardFooter>\r\n      </Card>\r\n      \r\n      {/* Add usage display */}\r\n      <GrokUsageDisplay />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GrokConfig;\r\n","\r\nimport React, { useState } from \"react\";\r\nimport Navbar from \"@/components/navbar/Navbar\";\r\nimport Footer from \"@/components/Footer\";\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\r\nimport { GrokProvider } from \"@/contexts/GrokContext\";\r\nimport GrokSustainabilityChat from \"@/components/grok/GrokSustainabilityChat\";\r\nimport GrokConfig from \"@/components/grok/GrokConfig\";\r\nimport { useA11y } from \"@/hooks/useA11y\";\r\nimport { Leaf, MessageSquare, Settings, BarChart3 } from \"lucide-react\";\r\n\r\nfunction GrokAI() {\r\n  const [activeTab, setActiveTab] = useState(\"sustainability\");\r\n  \r\n  // Set page title and a11y features\r\n  useA11y({\r\n    title: \"Grok AI - CarbonConstruct\",\r\n    announceRouteChanges: true,\r\n    focusMainContentOnRouteChange: true\r\n  });\r\n\r\n  return (\r\n    <GrokProvider>\r\n      <div className=\"flex min-h-screen flex-col\">\r\n        <Navbar />\r\n        <main className=\"flex-grow container mx-auto px-4 pt-24 pb-12\" id=\"main-content\" tabIndex={-1}>\r\n          <div className=\"mb-8\">\r\n            <h1 className=\"text-3xl font-bold text-carbon-800 dark:text-carbon-100 mb-2\">Grok AI Sustainability Assistant</h1>\r\n            <p className=\"text-carbon-600 dark:text-carbon-300\">\r\n              Expert AI guidance for sustainable construction, compliance, and Green Star certification\r\n            </p>\r\n          </div>\r\n          \r\n          <Tabs defaultValue={activeTab} onValueChange={setActiveTab} className=\"w-full\">\r\n            <TabsList className=\"grid grid-cols-3 mb-8\">\r\n              <TabsTrigger value=\"sustainability\" className=\"flex items-center gap-2\">\r\n                <Leaf className=\"h-4 w-4\" />\r\n                <span>Sustainability</span>\r\n              </TabsTrigger>\r\n              <TabsTrigger value=\"analysis\" className=\"flex items-center gap-2\">\r\n                <BarChart3 className=\"h-4 w-4\" />\r\n                <span>Analysis</span>\r\n              </TabsTrigger>\r\n              <TabsTrigger value=\"settings\" className=\"flex items-center gap-2\">\r\n                <Settings className=\"h-4 w-4\" />\r\n                <span>Settings</span>\r\n              </TabsTrigger>\r\n            </TabsList>\r\n            \r\n            <TabsContent value=\"sustainability\" className=\"w-full\">\r\n              <GrokSustainabilityChat />\r\n            </TabsContent>\r\n            \r\n            <TabsContent value=\"analysis\">\r\n              <div className=\"text-center py-12\">\r\n                <BarChart3 className=\"h-16 w-16 mx-auto mb-4 text-carbon-500\" />\r\n                <h3 className=\"text-xl font-medium mb-2\">Advanced Analysis Coming Soon</h3>\r\n                <p className=\"text-muted-foreground mb-4\">\r\n                  Advanced project analysis and reporting features will be available soon.\r\n                </p>\r\n              </div>\r\n            </TabsContent>\r\n            \r\n            <TabsContent value=\"settings\">\r\n              <GrokConfig />\r\n            </TabsContent>\r\n          </Tabs>\r\n        </main>\r\n        <Footer />\r\n      </div>\r\n    </GrokProvider>\r\n  );\r\n}\r\n\r\nexport default GrokAI;\r\n"],"names":["GrokSustainabilityChat","userMessage","setUserMessage","useState","conversation","setConversation","askGrok","isProcessing","isConfigured","useGrok","sustainabilityActions","jsx","Leaf","FileText","Star","Shield","handleQuickAction","prompt","mode","toast","response","prev","handleSendMessage","Card","jsxs","CardHeader","CardTitle","Badge","CardDescription","CardContent","action","Button","message","index","Textarea","e","Send","GrokConfig","onComplete","configureGrok","resetGrok","apiKey","setApiKey","handleConfigure","Check","X","Key","Input","CardFooter","GrokUsageDisplay","GrokAI","activeTab","setActiveTab","useA11y","GrokProvider","Navbar","Tabs","TabsList","TabsTrigger","BarChart3","Settings","TabsContent","Footer"],"mappings":"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"}