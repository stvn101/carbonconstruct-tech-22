{"version":3,"mappings":";4bAMA,MAAMA,EAAqBC,EAAM,KAAK,UACpC,OAAO,kCAAuC,8BAAE,SAAW,CAAE,QAASC,EAAE,oBAAqB,CAC/F,EAEMC,EAAyBF,EAAM,KAAK,UACxC,OAAO,qBAA2C,OAAAG,KAAA,2BACpD,EAMaC,EAAmC,IAAM,CACpD,KAAM,CAAE,YAAAC,EAAa,QAAAC,CAAA,EAAYC,EAC/B,IAAAC,EAAA,IAAM,OAAO,kCAAuC,8BAAE,SAAW,CAAE,QAASP,EAAE,oBAAqB,EACnG,CAAE,aAAc,IAAM,2BAA4B,GAAM,EAG1D,OACEQ,MAAC,OAAI,IAAKJ,EAAa,QAASC,EAC9B,SAAAG,MAACC,EAAA,CAAyB,QAAQ,uBAChC,SAAAD,MAACE,WAAA,CAAS,SACRF,MAACG,EAAA,CACC,KAAK,OACL,KAAK,KACL,QAAQ,2BAGV,SAAAH,MAACV,EAAA,EAAmB,EACtB,EACF,EACF,CAEJ,EAEac,EAA6CC,GAAU,CAClE,KAAM,CAAE,YAAAT,EAAa,QAAAC,CAAA,EAAYC,EAC/B,IAAAC,EAAA,IAAM,OAAO,qBAA2C,OAAAL,KAAA,4BACxD,CAAE,aAAc,IAAM,2BAA4B,GAAM,EAG1D,OACEM,MAAC,OAAI,IAAKJ,EAAa,QAASC,EAC9B,SAAAG,MAACC,EAAA,CAAyB,QAAQ,2BAChC,SAAAD,MAACE,WAAA,CAAS,SACRF,MAACG,EAAA,CACC,KAAK,OACL,KAAK,KACL,QAAQ,8BAGV,SAAAH,MAACP,EAAA,CAAwB,GAAGY,EAAO,EACrC,EACF,EACF,CAEJ","names":["AdminStatusChecker","React","m","MaterialsExportManager","n","LazyAdminStatusChecker","observerRef","preload","useLazyComponent","__vitePreload","jsx","StreamlinedErrorBoundary","Suspense","ProgressiveLoadingState","LazyMaterialsExportManager","props"],"ignoreList":[],"sources":["../../src/components/lazy/LazyAdminComponents.tsx"],"sourcesContent":["import React, { Suspense } from 'react';\r\nimport { StreamlinedErrorBoundary } from '@/components/error/StreamlinedErrorBoundary';\r\nimport { ProgressiveLoadingState } from '@/components/loading/ProgressiveLoadingState';\r\nimport { useLazyComponent } from '@/hooks/useLazyComponent';\r\n\r\n// Admin components - separate bundle for administrative features\r\nconst AdminStatusChecker = React.lazy(() => \r\n  import('@/components/admin/AdminStatusChecker').then(m => ({ default: m.AdminStatusChecker }))\r\n);\r\n\r\nconst MaterialsExportManager = React.lazy(() => \r\n  import('@/components/admin/MaterialsExportManager')\r\n);\r\n\r\n/**\r\n * Lazy Admin Components - Phase 2 Administrative Bundle\r\n * Separate loading for admin-only features to reduce main bundle size\r\n */\r\nexport const LazyAdminStatusChecker: React.FC = () => {\r\n  const { observerRef, preload } = useLazyComponent(\r\n    () => import('@/components/admin/AdminStatusChecker').then(m => ({ default: m.AdminStatusChecker })),\r\n    { preloadDelay: 3000, enableIntersectionObserver: false } // Admin features load on demand only\r\n  );\r\n\r\n  return (\r\n    <div ref={observerRef} onFocus={preload}>\r\n      <StreamlinedErrorBoundary feature=\"Admin Status Checker\">\r\n        <Suspense fallback={\r\n          <ProgressiveLoadingState \r\n            type=\"card\" \r\n            size=\"md\"\r\n            message=\"Loading admin panel...\"\r\n          />\r\n        }>\r\n          <AdminStatusChecker />\r\n        </Suspense>\r\n      </StreamlinedErrorBoundary>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const LazyMaterialsExportManager: React.FC<any> = (props) => {\r\n  const { observerRef, preload } = useLazyComponent(\r\n    () => import('@/components/admin/MaterialsExportManager'),\r\n    { preloadDelay: 3000, enableIntersectionObserver: false }\r\n  );\r\n\r\n  return (\r\n    <div ref={observerRef} onFocus={preload}>\r\n      <StreamlinedErrorBoundary feature=\"Materials Export Manager\">\r\n        <Suspense fallback={\r\n          <ProgressiveLoadingState \r\n            type=\"card\" \r\n            size=\"lg\"\r\n            message=\"Loading export manager...\"\r\n          />\r\n        }>\r\n          <MaterialsExportManager {...props} />\r\n        </Suspense>\r\n      </StreamlinedErrorBoundary>\r\n    </div>\r\n  );\r\n};"],"file":"assets/LazyAdminComponents-BW60EgqW.js"}