{"version":3,"file":"ConstructionIntegrations-Bah1SiTa.js","sources":["../../src/components/calculator/integrations/ConstructionIntegrations.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\r\nimport { Switch } from '@/components/ui/switch';\r\nimport { Link, Settings, Zap, CheckCircle, AlertCircle, Loader2 } from 'lucide-react';\r\nimport { useToast } from '@/hooks/use-toast';\r\n\r\ninterface IntegrationConfig {\r\n  id: string;\r\n  name: string;\r\n  status: 'connected' | 'available' | 'beta' | 'coming-soon';\r\n  description: string;\r\n  features: string[];\r\n  apiEndpoint?: string;\r\n  webhookUrl?: string;\r\n  enabled: boolean;\r\n}\r\n\r\nexport const ConstructionIntegrations: React.FC = () => {\r\n  const [integrations, setIntegrations] = useState<IntegrationConfig[]>([\r\n    {\r\n      id: 'procore',\r\n      name: 'Procore',\r\n      status: 'available',\r\n      description: 'Sync project data and carbon tracking with Procore construction management platform',\r\n      features: ['Project Sync', 'Real-time Updates', 'Material Tracking', 'Progress Reports'],\r\n      apiEndpoint: 'https://api.procore.com/v1',\r\n      enabled: false\r\n    },\r\n    {\r\n      id: 'autodesk-acc',\r\n      name: 'Autodesk Construction Cloud',\r\n      status: 'available',\r\n      description: 'Integrate with ACC for BIM-based carbon calculations and model analysis',\r\n      features: ['BIM Integration', 'Model Analysis', 'Quantity Takeoffs', 'Design Optimization'],\r\n      apiEndpoint: 'https://developer.api.autodesk.com/construction',\r\n      enabled: false\r\n    },\r\n    {\r\n      id: 'buildertrend',\r\n      name: 'Buildertrend',\r\n      status: 'available',\r\n      description: 'Connect residential construction projects with automated carbon tracking',\r\n      features: ['Project Management', 'Customer Portal', 'Material Orders', 'Schedule Sync'],\r\n      apiEndpoint: 'https://api.buildertrend.net/v1.0',\r\n      enabled: false\r\n    },\r\n    {\r\n      id: 'plangrid',\r\n      name: 'PlanGrid',\r\n      status: 'connected',\r\n      description: 'Field data collection and real-time construction progress tracking',\r\n      features: ['Field Reports', 'Photo Documentation', 'Progress Tracking', 'Quality Control'],\r\n      apiEndpoint: 'https://io.plangrid.com/projects',\r\n      enabled: true\r\n    },\r\n    {\r\n      id: 'fieldwire',\r\n      name: 'Fieldwire',\r\n      status: 'beta',\r\n      description: 'Task management and field communication with carbon impact tracking',\r\n      features: ['Task Management', 'Field Communication', 'Punch Lists', 'Photo Reports'],\r\n      apiEndpoint: 'https://console.fieldwire.net/api/v3',\r\n      enabled: false\r\n    },\r\n    {\r\n      id: 'smartsheet',\r\n      name: 'Smartsheet',\r\n      status: 'coming-soon',\r\n      description: 'Project planning and resource management with sustainability metrics',\r\n      features: ['Project Planning', 'Resource Management', 'Gantt Charts', 'Dashboards'],\r\n      enabled: false\r\n    },\r\n    {\r\n      id: 'custom-api',\r\n      name: 'Custom API',\r\n      status: 'available',\r\n      description: 'Build custom integrations using our comprehensive REST API',\r\n      features: ['REST API', 'Webhooks', 'Real-time Sync', 'Custom Workflows'],\r\n      apiEndpoint: 'https://api.carbonconstruct.com/v1',\r\n      enabled: false\r\n    }\r\n  ]);\r\n\r\n  const [apiKeys, setApiKeys] = useState<Record<string, string>>({});\r\n  const [webhookUrls, setWebhookUrls] = useState<Record<string, string>>({});\r\n  const [testingIntegration, setTestingIntegration] = useState<string | null>(null);\r\n  const { toast } = useToast();\r\n\r\n  const handleToggleIntegration = (integrationId: string) => {\r\n    setIntegrations(prev => prev.map(integration => \r\n      integration.id === integrationId \r\n        ? { ...integration, enabled: !integration.enabled }\r\n        : integration\r\n    ));\r\n\r\n    const integration = integrations.find(i => i.id === integrationId);\r\n    if (integration) {\r\n      toast({\r\n        title: `${integration.name} ${integration.enabled ? 'Disabled' : 'Enabled'}`,\r\n        description: `Integration ${integration.enabled ? 'disconnected' : 'connected'} successfully.`,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleTestConnection = async (integrationId: string) => {\r\n    setTestingIntegration(integrationId);\r\n    \r\n    // Simulate API test\r\n    setTimeout(() => {\r\n      setTestingIntegration(null);\r\n      toast({\r\n        title: \"Connection Test\",\r\n        description: \"Integration test completed successfully.\",\r\n      });\r\n    }, 2000);\r\n  };\r\n\r\n  const handleSaveConfig = (integrationId: string) => {\r\n    toast({\r\n      title: \"Configuration Saved\",\r\n      description: \"Integration settings have been updated.\",\r\n    });\r\n  };\r\n\r\n  const getStatusBadge = (status: string) => {\r\n    switch (status) {\r\n      case 'connected':\r\n        return <Badge className=\"bg-green-100 text-green-800 dark:bg-green-950/20 dark:text-green-300\">Connected</Badge>;\r\n      case 'available':\r\n        return <Badge className=\"bg-blue-100 text-blue-800 dark:bg-blue-950/20 dark:text-blue-300\">Available</Badge>;\r\n      case 'beta':\r\n        return <Badge className=\"bg-yellow-100 text-yellow-800 dark:bg-yellow-950/20 dark:text-yellow-300\">Beta</Badge>;\r\n      case 'coming-soon':\r\n        return <Badge className=\"bg-gray-100 text-gray-800 dark:bg-gray-950/20 dark:text-gray-300\">Coming Soon</Badge>;\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  const getStatusIcon = (status: string, enabled: boolean) => {\r\n    if (status === 'connected' && enabled) {\r\n      return <CheckCircle className=\"h-5 w-5 text-green-600\" />;\r\n    }\r\n    if (status === 'available') {\r\n      return <Zap className=\"h-5 w-5 text-blue-600\" />;\r\n    }\r\n    return <AlertCircle className=\"h-5 w-5 text-gray-400\" />;\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle className=\"flex items-center gap-2\">\r\n            <Link className=\"h-5 w-5\" />\r\n            Construction Management Integrations\r\n          </CardTitle>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n            {integrations.map((integration) => (\r\n              <Card key={integration.id} className=\"relative\">\r\n                <CardHeader className=\"pb-3\">\r\n                  <div className=\"flex items-start justify-between\">\r\n                    <div className=\"flex items-center gap-2\">\r\n                      {getStatusIcon(integration.status, integration.enabled)}\r\n                      <h4 className=\"font-medium\">{integration.name}</h4>\r\n                    </div>\r\n                    {getStatusBadge(integration.status)}\r\n                  </div>\r\n                </CardHeader>\r\n                <CardContent className=\"space-y-4\">\r\n                  <p className=\"text-sm text-muted-foreground\">{integration.description}</p>\r\n                  \r\n                  <div className=\"space-y-2\">\r\n                    <Label className=\"text-xs font-medium\">Features</Label>\r\n                    <div className=\"flex flex-wrap gap-1\">\r\n                      {integration.features.map((feature) => (\r\n                        <Badge key={feature} variant=\"outline\" className=\"text-xs\">\r\n                          {feature}\r\n                        </Badge>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n\r\n                  {integration.status !== 'coming-soon' && (\r\n                    <div className=\"flex items-center justify-between pt-2\">\r\n                      <Label className=\"text-sm\">Enable Integration</Label>\r\n                      <Switch\r\n                        checked={integration.enabled}\r\n                        onCheckedChange={() => handleToggleIntegration(integration.id)}\r\n                        disabled={false}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </CardContent>\r\n              </Card>\r\n            ))}\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Configuration Panel */}\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle className=\"flex items-center gap-2\">\r\n            <Settings className=\"h-5 w-5\" />\r\n            Integration Configuration\r\n          </CardTitle>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <Tabs defaultValue=\"api-keys\" className=\"w-full\">\r\n            <TabsList className=\"grid w-full grid-cols-3\">\r\n              <TabsTrigger value=\"api-keys\">API Keys</TabsTrigger>\r\n              <TabsTrigger value=\"webhooks\">Webhooks</TabsTrigger>\r\n              <TabsTrigger value=\"settings\">Settings</TabsTrigger>\r\n            </TabsList>\r\n            \r\n            <TabsContent value=\"api-keys\" className=\"space-y-4\">\r\n              {integrations.filter(i => i.status !== 'coming-soon').map((integration) => (\r\n                <div key={integration.id} className=\"space-y-3 p-4 border rounded-lg\">\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <Label className=\"font-medium\">{integration.name} API Key</Label>\r\n                    <Button\r\n                      size=\"sm\"\r\n                      variant=\"outline\"\r\n                      onClick={() => handleTestConnection(integration.id)}\r\n                      disabled={testingIntegration === integration.id}\r\n                    >\r\n                      {testingIntegration === integration.id ? (\r\n                        <Loader2 className=\"h-4 w-4 animate-spin\" />\r\n                      ) : (\r\n                        'Test'\r\n                      )}\r\n                    </Button>\r\n                  </div>\r\n                  <Input\r\n                    type=\"password\"\r\n                    placeholder=\"Enter API key...\"\r\n                    value={apiKeys[integration.id] || ''}\r\n                    onChange={(e) => setApiKeys(prev => ({ ...prev, [integration.id]: e.target.value }))}\r\n                  />\r\n                  <Button size=\"sm\" onClick={() => handleSaveConfig(integration.id)}>\r\n                    Save Configuration\r\n                  </Button>\r\n                </div>\r\n              ))}\r\n            </TabsContent>\r\n            \r\n            <TabsContent value=\"webhooks\" className=\"space-y-4\">\r\n              {integrations.filter(i => i.enabled).map((integration) => (\r\n                <div key={integration.id} className=\"space-y-3 p-4 border rounded-lg\">\r\n                  <Label className=\"font-medium\">{integration.name} Webhook URL</Label>\r\n                  <Input\r\n                    placeholder=\"https://your-webhook-url.com/endpoint\"\r\n                    value={webhookUrls[integration.id] || ''}\r\n                    onChange={(e) => setWebhookUrls(prev => ({ ...prev, [integration.id]: e.target.value }))}\r\n                  />\r\n                  <div className=\"text-xs text-muted-foreground\">\r\n                    This URL will receive real-time updates from {integration.name}\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </TabsContent>\r\n            \r\n            <TabsContent value=\"settings\" className=\"space-y-4\">\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle className=\"text-base\">Sync Frequency</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent>\r\n                    <div className=\"space-y-2\">\r\n                      <Label>Update Interval</Label>\r\n                      <select className=\"w-full p-2 border rounded\">\r\n                        <option value=\"real-time\">Real-time</option>\r\n                        <option value=\"hourly\">Hourly</option>\r\n                        <option value=\"daily\">Daily</option>\r\n                        <option value=\"weekly\">Weekly</option>\r\n                      </select>\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n                \r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle className=\"text-base\">Data Privacy</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent>\r\n                    <div className=\"space-y-3\">\r\n                      <div className=\"flex items-center justify-between\">\r\n                        <Label>Encrypt Data</Label>\r\n                        <Switch defaultChecked />\r\n                      </div>\r\n                      <div className=\"flex items-center justify-between\">\r\n                        <Label>Log API Calls</Label>\r\n                        <Switch defaultChecked />\r\n                      </div>\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n              </div>\r\n            </TabsContent>\r\n          </Tabs>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};"],"names":["ConstructionIntegrations","integrations","setIntegrations","useState","apiKeys","setApiKeys","webhookUrls","setWebhookUrls","testingIntegration","setTestingIntegration","toast","useToast","handleToggleIntegration","integrationId","prev","integration","i","handleTestConnection","handleSaveConfig","getStatusBadge","status","jsx","Badge","getStatusIcon","enabled","CheckCircle","Zap","AlertCircle","jsxs","Card","CardHeader","CardTitle","Link","CardContent","Label","feature","Switch","Settings","Tabs","TabsList","TabsTrigger","TabsContent","Button","Loader2","Input","e"],"mappings":"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"}