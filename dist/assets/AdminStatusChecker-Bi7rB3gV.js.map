{"version":3,"file":"AdminStatusChecker-Bi7rB3gV.js","sources":["../../src/components/admin/AdminStatusChecker.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { useAuth } from '@/contexts/auth';\r\nimport { supabase } from '@/integrations/supabase/client';\r\nimport { AlertCircle, CheckCircle, User, Shield, Database } from 'lucide-react';\r\n\r\ninterface AdminStatus {\r\n  isAuthenticated: boolean;\r\n  userId: string | null;\r\n  userEmail: string | null;\r\n  profileRole: string | null;\r\n  isInAdminsTable: boolean;\r\n  hasJWTAdminRole: boolean;\r\n  adminTableEmails: string[];\r\n}\r\n\r\nexport const AdminStatusChecker: React.FC = () => {\r\n  const { user, profile, session } = useAuth();\r\n  const [adminStatus, setAdminStatus] = useState<AdminStatus>({\r\n    isAuthenticated: false,\r\n    userId: null,\r\n    userEmail: null,\r\n    profileRole: null,\r\n    isInAdminsTable: false,\r\n    hasJWTAdminRole: false,\r\n    adminTableEmails: []\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const checkAdminStatus = async () => {\r\n    setLoading(true);\r\n    \r\n    try {\r\n      // Check if user is in admins table\r\n      const { data: adminEmails } = await supabase\r\n        .from('admins')\r\n        .select('email');\r\n      \r\n      const adminEmailList = adminEmails?.map(a => a.email).filter(Boolean) || [];\r\n      \r\n      // Check JWT metadata for admin role\r\n      const jwtPayload = session?.access_token ? \r\n        JSON.parse(atob(session.access_token.split('.')[1])) : null;\r\n      const hasJWTAdmin = jwtPayload?.app_metadata?.role === 'admin';\r\n      \r\n      setAdminStatus({\r\n        isAuthenticated: !!user,\r\n        userId: user?.id || null,\r\n        userEmail: user?.email || null,\r\n        profileRole: profile?.role || null,\r\n        isInAdminsTable: adminEmailList.includes(user?.email || ''),\r\n        hasJWTAdminRole: hasJWTAdmin,\r\n        adminTableEmails: adminEmailList\r\n      });\r\n    } catch (error) {\r\n      console.error('Error checking admin status:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const addToAdminsTable = async () => {\r\n    if (!user?.email) return;\r\n    \r\n    try {\r\n      const { error } = await supabase\r\n        .from('admins')\r\n        .insert([{ email: user.email, id: user.id }]);\r\n      \r\n      if (error) throw error;\r\n      \r\n      checkAdminStatus();\r\n      alert('Added to admins table successfully!');\r\n    } catch (error) {\r\n      console.error('Error adding to admins:', error);\r\n      alert('Error adding to admins table. Check console for details.');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      checkAdminStatus();\r\n    }\r\n  }, [user, session]);\r\n\r\n  return (\r\n    <Card className=\"max-w-2xl mx-auto\">\r\n      <CardHeader>\r\n        <CardTitle className=\"flex items-center gap-2\">\r\n          <Shield className=\"h-5 w-5\" />\r\n          Admin Status Checker\r\n        </CardTitle>\r\n      </CardHeader>\r\n      <CardContent className=\"space-y-4\">\r\n        {/* Authentication Status */}\r\n        <div className=\"flex items-center justify-between p-3 border rounded-lg\">\r\n          <div className=\"flex items-center gap-2\">\r\n            <User className=\"h-4 w-4\" />\r\n            <span>Authentication Status</span>\r\n          </div>\r\n          {adminStatus.isAuthenticated ? (\r\n            <Badge variant=\"default\" className=\"bg-green-500\">\r\n              <CheckCircle className=\"h-3 w-3 mr-1\" />\r\n              Authenticated\r\n            </Badge>\r\n          ) : (\r\n            <Badge variant=\"destructive\">\r\n              <AlertCircle className=\"h-3 w-3 mr-1\" />\r\n              Not Authenticated\r\n            </Badge>\r\n          )}\r\n        </div>\r\n\r\n        {adminStatus.isAuthenticated && (\r\n          <>\r\n            {/* User Details */}\r\n            <div className=\"space-y-2 p-3 bg-muted rounded-lg\">\r\n              <p><strong>User ID:</strong> {adminStatus.userId}</p>\r\n              <p><strong>Email:</strong> {adminStatus.userEmail}</p>\r\n              <p><strong>Profile Role:</strong> {adminStatus.profileRole || 'None'}</p>\r\n            </div>\r\n\r\n            {/* Admin Table Status */}\r\n            <div className=\"flex items-center justify-between p-3 border rounded-lg\">\r\n              <div className=\"flex items-center gap-2\">\r\n                <Database className=\"h-4 w-4\" />\r\n                <span>In Admins Table</span>\r\n              </div>\r\n              {adminStatus.isInAdminsTable ? (\r\n                <Badge variant=\"default\" className=\"bg-green-500\">\r\n                  <CheckCircle className=\"h-3 w-3 mr-1\" />\r\n                  Yes\r\n                </Badge>\r\n              ) : (\r\n                <Badge variant=\"destructive\">\r\n                  <AlertCircle className=\"h-3 w-3 mr-1\" />\r\n                  No\r\n                </Badge>\r\n              )}\r\n            </div>\r\n\r\n            {/* JWT Admin Role */}\r\n            <div className=\"flex items-center justify-between p-3 border rounded-lg\">\r\n              <div className=\"flex items-center gap-2\">\r\n                <Shield className=\"h-4 w-4\" />\r\n                <span>JWT Admin Role</span>\r\n              </div>\r\n              {adminStatus.hasJWTAdminRole ? (\r\n                <Badge variant=\"default\" className=\"bg-green-500\">\r\n                  <CheckCircle className=\"h-3 w-3 mr-1\" />\r\n                  Has Admin Role\r\n                </Badge>\r\n              ) : (\r\n                <Badge variant=\"destructive\">\r\n                  <AlertCircle className=\"h-3 w-3 mr-1\" />\r\n                  No Admin Role\r\n                </Badge>\r\n              )}\r\n            </div>\r\n\r\n            {/* Admin Emails List */}\r\n            <div className=\"p-3 bg-muted rounded-lg\">\r\n              <p className=\"font-medium mb-2\">Emails in Admins Table:</p>\r\n              {adminStatus.adminTableEmails.length > 0 ? (\r\n                <ul className=\"list-disc list-inside text-sm\">\r\n                  {adminStatus.adminTableEmails.map((email, index) => (\r\n                    <li key={index}>{email}</li>\r\n                  ))}\r\n                </ul>\r\n              ) : (\r\n                <p className=\"text-muted-foreground text-sm\">No admin emails found</p>\r\n              )}\r\n            </div>\r\n\r\n            {/* Actions */}\r\n            <div className=\"flex gap-2\">\r\n              <Button onClick={checkAdminStatus} disabled={loading}>\r\n                {loading ? 'Checking...' : 'Refresh Status'}\r\n              </Button>\r\n              \r\n              {!adminStatus.isInAdminsTable && (\r\n                <Button onClick={addToAdminsTable} variant=\"outline\">\r\n                  Add Myself to Admins Table\r\n                </Button>\r\n              )}\r\n            </div>\r\n\r\n            {/* Summary */}\r\n            <div className=\"p-4 border-2 rounded-lg\">\r\n              <p className=\"font-medium mb-2\">Admin Access Summary:</p>\r\n              {adminStatus.isInAdminsTable || adminStatus.hasJWTAdminRole ? (\r\n                <p className=\"text-green-600\">✅ You have admin access!</p>\r\n              ) : (\r\n                <p className=\"text-red-600\">❌ You do not have admin access. Add yourself to the admins table above.</p>\r\n              )}\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n        {!adminStatus.isAuthenticated && (\r\n          <div className=\"text-center p-4 bg-yellow-50 rounded-lg\">\r\n            <p className=\"text-yellow-800\">Please sign in first to check your admin status.</p>\r\n          </div>\r\n        )}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};"],"names":["AdminStatusChecker","user","profile","session","useAuth","adminStatus","setAdminStatus","useState","loading","setLoading","checkAdminStatus","adminEmails","supabase","adminEmailList","a","jwtPayload","hasJWTAdmin","_a","error","addToAdminsTable","useEffect","jsxs","Card","jsx","CardHeader","CardTitle","Shield","CardContent","User","Badge","CheckCircle","AlertCircle","Fragment","Database","email","index","Button"],"mappings":"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"}