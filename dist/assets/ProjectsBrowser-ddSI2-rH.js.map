{"version":3,"file":"ProjectsBrowser-ddSI2-rH.js","sources":["../../src/components/projects/ProjectsList.tsx","../../src/components/project/ProjectCardSkeleton.tsx","../../src/components/projects/ProjectsErrorState.tsx","../../src/hooks/useOfflineMode.ts","../../src/pages/ProjectsBrowser.tsx"],"sourcesContent":["\r\nimport React, { useState, useMemo } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { SavedProject } from \"@/contexts/ProjectContext\";\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Building2, Calendar, Leaf, Search } from \"lucide-react\";\r\nimport { Input } from \"@/components/ui/input\";\r\n\r\ninterface ProjectsListProps {\r\n  projects: SavedProject[];\r\n  title?: string;\r\n  showSearch?: boolean;\r\n}\r\n\r\nconst ProjectsList: React.FC<ProjectsListProps> = ({ \r\n  projects, \r\n  title = \"Your Projects\",\r\n  showSearch = true \r\n}) => {\r\n  const [search, setSearch] = useState(\"\");\r\n  \r\n  // Memoize filtered projects to prevent unnecessary re-renders\r\n  const filteredProjects = useMemo(() => {\r\n    if (search === \"\") return projects;\r\n    \r\n    const searchLower = search.toLowerCase();\r\n    return projects.filter(project => \r\n      project.name.toLowerCase().includes(searchLower) ||\r\n      (project.description || \"\").toLowerCase().includes(searchLower)\r\n    );\r\n  }, [projects, search]);\r\n\r\n  // Memoize sorted projects to prevent unnecessary re-renders\r\n  const sortedProjects = useMemo(() => {\r\n    return [...filteredProjects].sort(\r\n      (a, b) => new Date(b.updated_at).getTime() - new Date(a.updated_at).getTime()\r\n    );\r\n  }, [filteredProjects]);\r\n  \r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle>{title}</CardTitle>\r\n        {showSearch && (\r\n          <div className=\"relative mt-2\">\r\n            <Search className=\"absolute left-2 top-2.5 h-4 w-4 text-muted-foreground\" />\r\n            <Input\r\n              placeholder=\"Search projects...\"\r\n              className=\"pl-8\"\r\n              value={search}\r\n              onChange={(e) => setSearch(e.target.value)}\r\n            />\r\n          </div>\r\n        )}\r\n      </CardHeader>\r\n      <CardContent>\r\n        {sortedProjects.length > 0 ? (\r\n          <div className=\"space-y-2\">\r\n            {sortedProjects.map((project) => (\r\n              <Link \r\n                to={`/projects/${project.id}`} \r\n                key={project.id}\r\n                className=\"block\"\r\n              >\r\n                <div className=\"p-3 border rounded-lg hover:bg-carbon-50 dark:hover:bg-carbon-800 transition-colors\">\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <div className=\"flex items-center\">\r\n                      <div className=\"bg-carbon-100 dark:bg-carbon-800 p-1.5 rounded-md mr-3\">\r\n                        <Building2 className=\"h-4 w-4 text-carbon-600\" />\r\n                      </div>\r\n                      <div>\r\n                        <h3 className=\"font-medium\">{project.name}</h3>\r\n                        <div className=\"flex items-center text-xs text-muted-foreground mt-1\">\r\n                          <Calendar className=\"h-3 w-3 mr-1\" />\r\n                          <span>\r\n                            {new Date(project.updated_at).toLocaleDateString()}\r\n                          </span>\r\n                          {project.result && (\r\n                            <span className=\"ml-2 flex items-center\">\r\n                              <Leaf className=\"h-3 w-3 mx-1\" />\r\n                              {Math.round(project.result.totalEmissions)} kg COâ‚‚e\r\n                            </span>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {project.tags && project.tags.length > 0 && (\r\n                      <div className=\"hidden md:flex space-x-1\">\r\n                        {project.tags.slice(0, 2).map(tag => (\r\n                          <Badge key={tag} variant=\"outline\" className=\"text-xs\">{tag}</Badge>\r\n                        ))}\r\n                        {project.tags.length > 2 && (\r\n                          <Badge variant=\"outline\" className=\"text-xs\">+{project.tags.length - 2}</Badge>\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </Link>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <div className=\"text-center py-8\">\r\n            <p className=\"text-muted-foreground\">No projects found</p>\r\n          </div>\r\n        )}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ProjectsList;\r\n","\r\nimport { Card, CardContent, CardHeader } from \"@/components/ui/card\";\r\nimport { Skeleton } from \"@/components/ui/skeleton\";\r\n\r\nexport function ProjectCardSkeleton() {\r\n  return (\r\n    <Card>\r\n      <CardHeader className=\"space-y-2\">\r\n        <Skeleton className=\"h-5 w-1/2\" />\r\n        <Skeleton className=\"h-4 w-1/3\" />\r\n      </CardHeader>\r\n      <CardContent className=\"space-y-4\">\r\n        <Skeleton className=\"h-20 w-full\" />\r\n        <div className=\"flex justify-between\">\r\n          <Skeleton className=\"h-4 w-24\" />\r\n          <Skeleton className=\"h-4 w-24\" />\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\n","\r\nimport React from 'react';\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Alert, AlertDescription, AlertTitle } from \"@/components/ui/alert\";\r\nimport { RefreshCw, WifiOff, AlertCircle } from \"lucide-react\";\r\n\r\ninterface ProjectsErrorStateProps {\r\n  isOffline: boolean;\r\n  hasError: boolean;\r\n  onRetry: () => void;\r\n  isRetrying: boolean;\r\n}\r\n\r\nconst ProjectsErrorState: React.FC<ProjectsErrorStateProps> = ({\r\n  isOffline,\r\n  hasError,\r\n  onRetry,\r\n  isRetrying\r\n}) => {\r\n  if (!isOffline && !hasError) return null;\r\n  \r\n  return (\r\n    <Alert \r\n      variant={isOffline ? \"warning\" : \"destructive\"} \r\n      className=\"mb-6\"\r\n    >\r\n      {isOffline ? (\r\n        <WifiOff className=\"h-5 w-5\" />\r\n      ) : (\r\n        <AlertCircle className=\"h-5 w-5\" />\r\n      )}\r\n      <AlertTitle>\r\n        {isOffline \r\n          ? \"Connection Issue Detected\" \r\n          : \"Error Loading Projects\"}\r\n      </AlertTitle>\r\n      <AlertDescription>\r\n        {isOffline \r\n          ? \"You're currently offline or we can't reach our servers. Your projects will appear when the connection is restored.\"\r\n          : \"We're experiencing technical issues loading your projects. Our team has been notified.\"}\r\n        <div className=\"mt-2\">\r\n          <Button \r\n            onClick={onRetry} \r\n            variant=\"outline\"\r\n            size=\"sm\"\r\n            disabled={isRetrying}\r\n          >\r\n            <RefreshCw className={`h-4 w-4 mr-2 ${isRetrying ? 'animate-spin' : ''}`} />\r\n            {isRetrying ? 'Checking...' : 'Try Again'}\r\n          </Button>\r\n        </div>\r\n      </AlertDescription>\r\n    </Alert>\r\n  );\r\n};\r\n\r\nexport default ProjectsErrorState;\r\n","\r\nimport { useState, useEffect, useCallback, useRef } from 'react';\r\nimport { checkNetworkStatus } from '@/utils/errorHandling/networkChecker';\r\nimport { pingSupabaseConnection } from '@/services/supabase/connection';\r\nimport { toast } from 'sonner';\r\n\r\n/**\r\n * Hook to determine if the application should run in offline mode\r\n * This checks both browser online status and Supabase connectivity\r\n * with improved reliability\r\n */\r\nexport function useOfflineMode(checkBackend: boolean = true) {\r\n  const { isOnline } = useNetworkStatus();\r\n  const [backendConnected, setBackendConnected] = useState(true);\r\n  const [isChecking, setIsChecking] = useState(false);\r\n  const [lastChecked, setLastChecked] = useState<Date | null>(null);\r\n  const [connectionAttempts, setConnectionAttempts] = useState(0);\r\n  const mountedRef = useRef(true);\r\n  \r\n  // Track toast display to prevent spam\r\n  const toastShownRef = useRef({\r\n    failure: false,\r\n    success: false,\r\n    timestamp: 0\r\n  });\r\n  \r\n  // Helper to check navigator.online status\r\n  function useNetworkStatus() {\r\n    const [isOnline, setIsOnline] = useState(\r\n      typeof navigator !== 'undefined' ? navigator.onLine : true\r\n    );\r\n\r\n    useEffect(() => {\r\n      if (typeof window === 'undefined') return;\r\n      \r\n      const handleOnline = () => setIsOnline(true);\r\n      const handleOffline = () => setIsOnline(false);\r\n\r\n      window.addEventListener('online', handleOnline);\r\n      window.addEventListener('offline', handleOffline);\r\n\r\n      return () => {\r\n        window.removeEventListener('online', handleOnline);\r\n        window.removeEventListener('offline', handleOffline);\r\n      };\r\n    }, []);\r\n\r\n    return { isOnline };\r\n  }\r\n  \r\n  // Cleanup function for unmounting\r\n  useEffect(() => {\r\n    return () => {\r\n      mountedRef.current = false;\r\n      toast.dismiss(\"connection-check-failed\");\r\n      toast.dismiss(\"connection-restored\");\r\n    };\r\n  }, []);\r\n  \r\n  // Connection check with simplified logic and reduced frequency\r\n  const checkBackendConnection = useCallback(async () => {\r\n    if (!isOnline || !checkBackend || !mountedRef.current || isChecking) {\r\n      return backendConnected;\r\n    }\r\n    \r\n    setIsChecking(true);\r\n    setConnectionAttempts(prev => prev + 1);\r\n    let isConnected = false;\r\n    \r\n    try {\r\n      // Simplified connection check with longer timeout\r\n      isConnected = await pingSupabaseConnection();\r\n      \r\n      if (mountedRef.current) {\r\n        if (isConnected !== backendConnected) {\r\n          setBackendConnected(isConnected);\r\n          \r\n          const now = Date.now();\r\n          \r\n          if (!isConnected && !toastShownRef.current.failure) {\r\n            // Reduce frequency of offline toasts\r\n            toast.error(\"Unable to connect to the server. Using offline mode.\", { \r\n              id: \"connection-check-failed\", \r\n              duration: 5000 \r\n            });\r\n            \r\n            toastShownRef.current.failure = true;\r\n            toastShownRef.current.timestamp = now;\r\n          } else if (isConnected && !toastShownRef.current.success && toastShownRef.current.failure) {\r\n            toast.success(\"Connection restored successfully!\", { \r\n              id: \"connection-restored\", \r\n              duration: 3000 \r\n            });\r\n            \r\n            toastShownRef.current.success = true;\r\n            toastShownRef.current.failure = false;\r\n            \r\n            // Reset toast flags after a reasonable time\r\n            setTimeout(() => {\r\n              if (mountedRef.current) {\r\n                toastShownRef.current.success = false;\r\n                toastShownRef.current.failure = false; // Reset failure flag too to allow future notifications\r\n              }\r\n            }, 60000); // 1 minute cooldown\r\n          }\r\n        }\r\n        \r\n        setLastChecked(new Date());\r\n        setIsChecking(false);\r\n      }\r\n      \r\n      return isConnected;\r\n    } catch (error) {\r\n      if (mountedRef.current) {\r\n        setBackendConnected(false);\r\n        setIsChecking(false);\r\n        setLastChecked(new Date());\r\n      }\r\n      return false;\r\n    }\r\n  }, [isOnline, checkBackend, backendConnected, isChecking]);\r\n\r\n  // Check connectivity less frequently to reduce unnecessary network traffic\r\n  useEffect(() => {\r\n    if (!mountedRef.current) return;\r\n    \r\n    // Initial check with slight delay to let app stabilize\r\n    const initialTimer = setTimeout(() => {\r\n      if (mountedRef.current) {\r\n        checkBackendConnection();\r\n      }\r\n    }, 3000);\r\n    \r\n    // Perform checks less frequently (every 2 minutes instead of every minute)\r\n    const intervalTimer = setInterval(() => {\r\n      if (mountedRef.current && isOnline && checkBackend) {\r\n        checkBackendConnection();\r\n      }\r\n    }, 120000); // 2 minutes\r\n    \r\n    return () => {\r\n      clearTimeout(initialTimer);\r\n      clearInterval(intervalTimer);\r\n    };\r\n  }, [isOnline, checkBackend, checkBackendConnection]);\r\n\r\n  // Force a new check when going from offline to online\r\n  useEffect(() => {\r\n    if (!mountedRef.current) return;\r\n    \r\n    if (isOnline && checkBackend && !backendConnected) {\r\n      const timeout = setTimeout(() => {\r\n        if (mountedRef.current) {\r\n          checkBackendConnection();\r\n        }\r\n      }, 2000);\r\n      \r\n      return () => clearTimeout(timeout);\r\n    }\r\n  }, [isOnline, checkBackend, checkBackendConnection, backendConnected]);\r\n\r\n  return {\r\n    isOfflineMode: !isOnline || !backendConnected,\r\n    isCheckingConnection: isChecking,\r\n    lastConnectionCheck: lastChecked,\r\n    connectionAttempts,\r\n    checkConnection: checkBackendConnection\r\n  };\r\n}\r\n","\r\nimport React, { useEffect, useState, useCallback, useRef } from 'react';\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { motion } from \"framer-motion\";\r\nimport Navbar from \"@/components/Navbar\";\r\nimport Footer from \"@/components/Footer\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FolderPlus, Calculator, ArrowLeft, RefreshCw } from \"lucide-react\";\r\nimport { useProjects } from \"@/contexts/ProjectContext\";\r\nimport ProjectsList from \"@/components/projects/ProjectsList\";\r\nimport { ProjectCardSkeleton } from \"@/components/project/ProjectCardSkeleton\";\r\nimport { useAuth } from '@/contexts/auth';\r\nimport { ScrollArea } from '@/components/ui/scroll-area';\r\nimport PageLoading from '@/components/ui/page-loading';\r\nimport ProjectsErrorState from \"@/components/projects/ProjectsErrorState\";\r\nimport { useOfflineMode } from \"@/hooks/useOfflineMode\";\r\nimport ErrorBoundary from \"@/components/ErrorBoundary\";\r\nimport { toast } from 'sonner';\r\n\r\nconst ProjectsBrowser: React.FC = () => {\r\n  const { projects, isLoading, fetchError, loadProjects } = useProjects();\r\n  const { user, profile } = useAuth();\r\n  const isPremiumUser = user && profile?.subscription_tier === 'premium';\r\n  const [isPageLoaded, setIsPageLoaded] = useState(false);\r\n  const [loadAttempts, setLoadAttempts] = useState(0);\r\n  const { isOfflineMode, checkConnection, connectionAttempts, isCheckingConnection } = useOfflineMode();\r\n  const pageInitializedRef = useRef(false);\r\n  const retryTimeoutRef = useRef<NodeJS.Timeout | null>(null);\r\n  const loadingTimeoutRef = useRef<NodeJS.Timeout | null>(null);\r\n  \r\n  // Setup loading timeout\r\n  useEffect(() => {\r\n    if (isLoading) {\r\n      // Set a timeout to prevent infinite loading\r\n      loadingTimeoutRef.current = setTimeout(() => {\r\n        if (isLoading) {\r\n          toast.error(\"Loading projects timed out. Please try refreshing.\");\r\n          setIsPageLoaded(true); // Force page to show even if loading\r\n        }\r\n      }, 15000); // 15 second timeout\r\n    }\r\n    \r\n    return () => {\r\n      if (loadingTimeoutRef.current) {\r\n        clearTimeout(loadingTimeoutRef.current);\r\n      }\r\n    };\r\n  }, [isLoading]);\r\n  \r\n  // Delay setting page loaded status to prevent flickering\r\n  useEffect(() => {\r\n    // Only do this once to prevent repeated flashes\r\n    if (!pageInitializedRef.current) {\r\n      pageInitializedRef.current = true;\r\n      const timer = setTimeout(() => {\r\n        setIsPageLoaded(true);\r\n      }, 300);\r\n      \r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, []);\r\n\r\n  const handleRetryLoad = useCallback(() => {\r\n    // Prevent multiple simultaneous retries\r\n    if (retryTimeoutRef.current) return;\r\n    \r\n    setLoadAttempts(prev => prev + 1);\r\n    \r\n    // Show loading toast\r\n    toast.loading(\"Checking connection...\", { id: \"retry-connection-check\" });\r\n    \r\n    // Check connection first\r\n    checkConnection();\r\n    \r\n    // Wait a moment then refresh\r\n    retryTimeoutRef.current = setTimeout(() => {\r\n      toast.dismiss(\"retry-connection-check\");\r\n      \r\n      // Try to load projects again\r\n      if (loadProjects) {\r\n        loadProjects().catch(err => {\r\n          console.error(\"Error reloading projects:\", err);\r\n          toast.error(\"Failed to load projects. Please try again later.\");\r\n        });\r\n      }\r\n      \r\n      // Instead of full page refresh, just show loading state again\r\n      setIsPageLoaded(false);\r\n      setTimeout(() => {\r\n        setIsPageLoaded(true);\r\n        retryTimeoutRef.current = null;\r\n      }, 300);\r\n    }, 1500);\r\n  }, [checkConnection, loadProjects]);\r\n\r\n  // Cleanup on unmount\r\n  useEffect(() => {\r\n    return () => {\r\n      if (retryTimeoutRef.current) {\r\n        clearTimeout(retryTimeoutRef.current);\r\n      }\r\n      if (loadingTimeoutRef.current) {\r\n        clearTimeout(loadingTimeoutRef.current);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <motion.div \r\n      className={`min-h-screen flex flex-col bg-carbon-50 dark:bg-carbon-900 overflow-x-hidden ${isPremiumUser ? 'premium-user' : ''}`}\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n      transition={{ duration: 0.4 }}\r\n    >\r\n      <Helmet>\r\n        <title>Browse Projects | CarbonConstruct</title>\r\n        <meta name=\"description\" content=\"Browse and manage your carbon calculation projects\" />\r\n      </Helmet>\r\n      <Navbar />\r\n      <main className=\"flex-grow content-top-spacing px-4 pb-12 overflow-y-auto\">\r\n        {!isPageLoaded ? (\r\n          <PageLoading isLoading={true} text=\"Loading projects...\" />\r\n        ) : (\r\n          <ErrorBoundary \r\n            feature=\"Projects Browser\" \r\n            ignoreErrors={true} \r\n            resetCondition={loadAttempts}\r\n          >\r\n            <ScrollArea className=\"h-full w-full\">\r\n              <div className=\"container mx-auto\">\r\n                <div className=\"mb-6 pt-16\">\r\n                  <Button variant=\"ghost\" asChild className=\"mb-4\">\r\n                    <Link to=\"/dashboard\">\r\n                      <ArrowLeft className=\"h-4 w-4 mr-2\" />\r\n                      Back to Dashboard\r\n                    </Link>\r\n                  </Button>\r\n                </div>\r\n                \r\n                <div className=\"flex flex-col md:flex-row md:items-center justify-between mb-6\">\r\n                  <div>\r\n                    <h1 className=\"text-2xl md:text-3xl font-bold\">Projects Browser</h1>\r\n                    <p className=\"text-muted-foreground\">Find and manage all your carbon calculation projects</p>\r\n                  </div>\r\n                  <div className=\"mt-4 md:mt-0 space-x-2 flex flex-wrap gap-2\">\r\n                    <Button \r\n                      asChild\r\n                      variant=\"outline\"\r\n                    >\r\n                      <Link to=\"/projects/new\">\r\n                        <FolderPlus className=\"h-4 w-4 mr-2\" />\r\n                        <span className=\"whitespace-nowrap\">New Project</span>\r\n                      </Link>\r\n                    </Button>\r\n                    <Button \r\n                      asChild\r\n                      className=\"bg-carbon-600 hover:bg-carbon-700 text-white\"\r\n                    >\r\n                      <Link to=\"/calculator\">\r\n                        <Calculator className=\"h-4 w-4 mr-2\" />\r\n                        <span className=\"whitespace-nowrap\">New Calculation</span>\r\n                      </Link>\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n                \r\n                <ProjectsErrorState \r\n                  isOffline={isOfflineMode}\r\n                  hasError={!!fetchError && connectionAttempts > 1 && !isOfflineMode}\r\n                  onRetry={handleRetryLoad}\r\n                  isRetrying={!!retryTimeoutRef.current || isCheckingConnection}\r\n                />\r\n\r\n                {isLoading && (!projects || projects.length === 0) ? (\r\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n                    {[...Array(3)].map((_, i) => (\r\n                      <ProjectCardSkeleton key={i} />\r\n                    ))}\r\n                  </div>\r\n                ) : projects.length === 0 && !isOfflineMode ? (\r\n                  <div className=\"text-center py-12 border rounded-lg bg-white dark:bg-carbon-800 shadow-sm p-8\">\r\n                    <h2 className=\"text-xl font-semibold mb-2\">No Projects Found</h2>\r\n                    <p className=\"text-muted-foreground mb-6\">\r\n                      {user ? \"You haven't created any projects yet.\" : \"Please sign in to view your projects.\"}\r\n                    </p>\r\n                    <div className=\"flex justify-center gap-2\">\r\n                      <Button \r\n                        asChild\r\n                        variant=\"outline\"\r\n                      >\r\n                        <Link to=\"/projects/new\">\r\n                          <FolderPlus className=\"h-4 w-4 mr-2\" />\r\n                          Create Your First Project\r\n                        </Link>\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  <ProjectsList \r\n                    projects={projects || []} \r\n                    title=\"All Projects\" \r\n                    showSearch={true} \r\n                  />\r\n                )}\r\n\r\n                {/* Add a manual refresh button for stuck loading states */}\r\n                {(isLoading && projects && projects.length > 0) && (\r\n                  <div className=\"flex justify-center mt-8\">\r\n                    <Button \r\n                      variant=\"outline\" \r\n                      onClick={handleRetryLoad}\r\n                      className=\"flex items-center gap-2\"\r\n                    >\r\n                      <RefreshCw className=\"h-4 w-4\" />\r\n                      Refresh Projects\r\n                    </Button>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </ScrollArea>\r\n          </ErrorBoundary>\r\n        )}\r\n      </main>\r\n      <Footer />\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default ProjectsBrowser;\r\n"],"names":["ProjectsList","projects","title","showSearch","search","setSearch","useState","filteredProjects","useMemo","searchLower","project","sortedProjects","a","b","Card","jsxs","CardHeader","jsx","CardTitle","Search","Input","e","CardContent","Link","Building2","Calendar","Leaf","tag","Badge","ProjectCardSkeleton","Skeleton","ProjectsErrorState","isOffline","hasError","onRetry","isRetrying","Alert","WifiOff","AlertCircle","AlertTitle","AlertDescription","Button","RefreshCw","useOfflineMode","checkBackend","isOnline","useNetworkStatus","backendConnected","setBackendConnected","isChecking","setIsChecking","lastChecked","setLastChecked","connectionAttempts","setConnectionAttempts","mountedRef","useRef","toastShownRef","setIsOnline","useEffect","handleOnline","handleOffline","toast","checkBackendConnection","useCallback","prev","isConnected","pingSupabaseConnection","now","initialTimer","intervalTimer","timeout","ProjectsBrowser","isLoading","fetchError","loadProjects","useProjects","user","profile","useAuth","isPremiumUser","isPageLoaded","setIsPageLoaded","loadAttempts","setLoadAttempts","isOfflineMode","checkConnection","isCheckingConnection","pageInitializedRef","retryTimeoutRef","loadingTimeoutRef","timer","handleRetryLoad","err","motion","Helmet","Navbar","ErrorBoundary","ScrollArea","ArrowLeft","FolderPlus","Calculator","_","i","PageLoading","Footer"],"mappings":"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"}