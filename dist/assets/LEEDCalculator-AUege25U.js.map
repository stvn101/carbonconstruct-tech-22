{"version":3,"file":"LEEDCalculator-AUege25U.js","sources":["../../src/components/calculator/calculators/LEEDCalculator.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Checkbox } from '@/components/ui/checkbox';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Award } from 'lucide-react';\r\nimport { EnhancedCalculatorResults } from '../enhanced';\r\nimport { ExtendedMaterialData } from '@/lib/materials/materialTypes';\r\nimport ComplianceFlag from '@/components/ui/compliance-flag';\r\nimport EmbodiedCarbonClassifier from '@/components/ui/embodied-carbon-classifier';\r\nimport MaterialComparisonToggle from '@/components/ui/material-comparison-toggle';\r\n\r\ninterface LEEDCalculatorProps {\r\n  onCalculationUpdate: (data: LEEDData) => void;\r\n}\r\n\r\ninterface LEEDData {\r\n  totalPoints: number;\r\n  certificationLevel: string;\r\n  pointsToGold: number;\r\n  carbonImpact: number;\r\n  categoryBreakdown: Record<string, number>;\r\n  materialEmissions?: number;\r\n  transportEmissions?: number;\r\n  energyEmissions?: number;\r\n}\r\n\r\ninterface LEEDItem {\r\n  id: string;\r\n  name: string;\r\n  points: number;\r\n  category: string;\r\n  checked: boolean;\r\n}\r\n\r\nexport const LEEDCalculator: React.FC<LEEDCalculatorProps> = ({ onCalculationUpdate }) => {\r\n  const [leedItems, setLeedItems] = useState<LEEDItem[]>([\r\n    { id: 'site-selection', name: 'Sustainable Site Selection', points: 1, category: 'Sustainable Sites', checked: false },\r\n    { id: 'brownfield', name: 'Brownfield Redevelopment', points: 1, category: 'Sustainable Sites', checked: false },\r\n    { id: 'public-transport', name: 'Public Transportation Access', points: 5, category: 'Location & Transportation', checked: false },\r\n    { id: 'water-reduction', name: 'Water Use Reduction', points: 4, category: 'Water Efficiency', checked: false },\r\n    { id: 'rainwater', name: 'Rainwater Management', points: 3, category: 'Water Efficiency', checked: false },\r\n    { id: 'commissioning', name: 'Enhanced Commissioning', points: 6, category: 'Energy & Atmosphere', checked: false },\r\n    { id: 'energy-performance', name: 'Optimize Energy Performance', points: 18, category: 'Energy & Atmosphere', checked: false },\r\n    { id: 'renewable', name: 'Renewable Energy Production', points: 3, category: 'Energy & Atmosphere', checked: false },\r\n    { id: 'recycled-content', name: 'Recycled Content Materials', points: 2, category: 'Materials & Resources', checked: false },\r\n    { id: 'regional-materials', name: 'Regional Materials', points: 2, category: 'Materials & Resources', checked: false },\r\n    { id: 'indoor-air', name: 'Enhanced Indoor Air Quality', points: 2, category: 'Indoor Environmental Quality', checked: false },\r\n    { id: 'daylight', name: 'Daylight and Quality Views', points: 3, category: 'Indoor Environmental Quality', checked: false },\r\n    { id: 'acoustic-performance', name: 'Acoustic Performance', points: 1, category: 'Indoor Environmental Quality', checked: false },\r\n    { id: 'green-power', name: 'Green Power and Carbon Offsets', points: 2, category: 'Energy & Atmosphere', checked: false },\r\n    { id: 'innovation', name: 'Innovation in Design', points: 5, category: 'Innovation', checked: false },\r\n    { id: 'leed-professional', name: 'LEED Accredited Professional', points: 1, category: 'Innovation', checked: false }\r\n  ]);\r\n\r\n  const [results, setResults] = useState<LEEDData | null>(null);\r\n  const [selectedMaterials, setSelectedMaterials] = useState<ExtendedMaterialData[]>([]);\r\n  const [comparisonEnabled, setComparisonEnabled] = useState(false);\r\n\r\n  const calculateLEED = () => {\r\n    const totalPoints = leedItems.filter(item => item.checked).reduce((sum, item) => sum + item.points, 0);\r\n\r\n    // Determine certification level\r\n    let certificationLevel = 'Not Certified';\r\n    let levelColor = 'text-gray-700';\r\n    if (totalPoints >= 80) {\r\n      certificationLevel = 'Platinum';\r\n      levelColor = 'text-gray-800';\r\n    } else if (totalPoints >= 60) {\r\n      certificationLevel = 'Gold';\r\n      levelColor = 'text-yellow-700';\r\n    } else if (totalPoints >= 50) {\r\n      certificationLevel = 'Silver';\r\n      levelColor = 'text-gray-600';\r\n    } else if (totalPoints >= 40) {\r\n      certificationLevel = 'Certified';\r\n      levelColor = 'text-green-700';\r\n    }\r\n\r\n    const pointsToGold = Math.max(0, 60 - totalPoints);\r\n    const carbonImpact = totalPoints * 2.5; // Estimated % reduction\r\n\r\n    // Calculate category breakdown\r\n    const categoryBreakdown: Record<string, number> = {};\r\n    leedItems.filter(item => item.checked).forEach(item => {\r\n      categoryBreakdown[item.category] = (categoryBreakdown[item.category] || 0) + item.points;\r\n    });\r\n\r\n    const calculationResults: LEEDData = {\r\n      totalPoints,\r\n      certificationLevel,\r\n      pointsToGold,\r\n      carbonImpact,\r\n      categoryBreakdown,\r\n      materialEmissions: totalPoints * 15, // Estimated from materials category\r\n      transportEmissions: totalPoints * 5, // Estimated from transport category\r\n      energyEmissions: totalPoints * 20 // Estimated from energy category\r\n    };\r\n\r\n    setResults(calculationResults);\r\n    onCalculationUpdate(calculationResults);\r\n  };\r\n\r\n  const handleItemToggle = (itemId: string) => {\r\n    setLeedItems(prev => prev.map(item => \r\n      item.id === itemId ? { ...item, checked: !item.checked } : item\r\n    ));\r\n  };\r\n\r\n  const getCertificationColor = (level: string) => {\r\n    switch (level) {\r\n      case 'Platinum': return 'text-gray-800 dark:text-gray-200';\r\n      case 'Gold': return 'text-yellow-700 dark:text-yellow-400';\r\n      case 'Silver': return 'text-gray-600 dark:text-gray-400';\r\n      case 'Certified': return 'text-green-700 dark:text-green-400';\r\n      default: return 'text-muted-foreground';\r\n    }\r\n  };\r\n\r\n  // Group items by category\r\n  const categories = leedItems.reduce((acc, item) => {\r\n    if (!acc[item.category]) acc[item.category] = [];\r\n    acc[item.category].push(item);\r\n    return acc;\r\n  }, {} as Record<string, LEEDItem[]>);\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle className=\"flex items-center gap-2\">\r\n            <Award className=\"h-5 w-5\" />\r\n            LEED v4.1 Certification Calculator\r\n          </CardTitle>\r\n        </CardHeader>\r\n        <CardContent className=\"space-y-6\">\r\n          {Object.entries(categories).map(([category, items]) => (\r\n            <div key={category}>\r\n              <h4 className=\"font-semibold mb-3 text-primary\">{category}</h4>\r\n              <div className=\"space-y-3\">\r\n                {items.map((item) => (\r\n                  <div key={item.id} className=\"flex items-center justify-between p-3 border rounded-lg\">\r\n                    <div className=\"flex items-center space-x-3 flex-1\">\r\n                      <Checkbox\r\n                        id={item.id}\r\n                        checked={item.checked}\r\n                        onCheckedChange={() => handleItemToggle(item.id)}\r\n                      />\r\n                      <Label htmlFor={item.id} className=\"flex-1 cursor-pointer\">\r\n                        {item.name}\r\n                      </Label>\r\n                    </div>\r\n                    <div className=\"text-sm font-semibold text-primary\">\r\n                      {item.points} {item.points === 1 ? 'point' : 'points'}\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          ))}\r\n\r\n          <Button onClick={calculateLEED} className=\"w-full\">\r\n            Calculate LEED Score\r\n          </Button>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {results && (\r\n        <div className=\"space-y-6\">\r\n          {/* LEED Results with Enhanced Display */}\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center justify-between\">\r\n                LEED Certification Results\r\n                <div className=\"flex items-center gap-2\">\r\n                  <ComplianceFlag \r\n                    standard=\"greenstar\" \r\n                    status={results.totalPoints >= 60 ? 'compliant' : results.totalPoints >= 40 ? 'warning' : 'breach'}\r\n                  />\r\n                  <EmbodiedCarbonClassifier \r\n                    carbonIntensity={results.carbonImpact}\r\n                    size=\"sm\"\r\n                  />\r\n                </div>\r\n              </CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-6\">\r\n                <Card className=\"p-4\">\r\n                  <div className=\"text-sm text-muted-foreground\">Total Points</div>\r\n                  <div className=\"text-2xl font-bold text-primary\">\r\n                    {results.totalPoints}/110\r\n                  </div>\r\n                </Card>\r\n\r\n                <Card className=\"p-4\">\r\n                  <div className=\"text-sm text-muted-foreground\">Certification Level</div>\r\n                  <div className={`text-2xl font-bold ${getCertificationColor(results.certificationLevel)}`}>\r\n                    {results.certificationLevel}\r\n                  </div>\r\n                </Card>\r\n\r\n                <Card className=\"p-4\">\r\n                  <div className=\"text-sm text-muted-foreground\">Points to Gold</div>\r\n                  <div className=\"text-2xl font-bold text-yellow-600\">\r\n                    {results.pointsToGold}\r\n                  </div>\r\n                </Card>\r\n\r\n                <Card className=\"p-4\">\r\n                  <div className=\"text-sm text-muted-foreground\">Carbon Impact</div>\r\n                  <div className=\"text-2xl font-bold text-green-600\">\r\n                    {results.carbonImpact.toFixed(1)}%\r\n                  </div>\r\n                  <div className=\"text-xs text-green-600\">Estimated reduction</div>\r\n                </Card>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          {/* Material Comparison for LEED */}\r\n          <MaterialComparisonToggle\r\n            baseMaterial={{\r\n              name: 'LEED Materials Selection',\r\n              carbon_footprint_kgco2e_kg: results.carbonImpact / 10\r\n            }}\r\n            alternatives={[]}\r\n            onToggleComparison={setComparisonEnabled}\r\n            comparisonEnabled={comparisonEnabled}\r\n            onSelectAlternative={(material) => {\r\n              console.log('Selected LEED material alternative:', material);\r\n            }}\r\n          />\r\n\r\n          {/* Enhanced Calculator Results */}\r\n          <EnhancedCalculatorResults\r\n            result={{\r\n              totalEmissions: results.carbonImpact * 1000, // Convert % to kg for display\r\n              materialEmissions: results.materialEmissions || 0,\r\n              transportEmissions: results.transportEmissions || 0,\r\n              energyEmissions: results.energyEmissions || 0,\r\n              breakdown: {\r\n                materials: results.materialEmissions || 0,\r\n                transport: results.transportEmissions || 0,\r\n                energy: results.energyEmissions || 0,\r\n              },\r\n              breakdownByMaterial: {},\r\n              breakdownByTransport: {},\r\n              breakdownByEnergy: { renewable: results.energyEmissions || 0 }\r\n            }}\r\n            materials={selectedMaterials}\r\n            onMaterialSelect={(material) => {\r\n              console.log('Selected LEED material for optimization:', material);\r\n            }}\r\n          />\r\n\r\n          {Object.keys(results.categoryBreakdown).length > 0 && (\r\n            <Card className=\"p-4\">\r\n              <h4 className=\"font-semibold mb-3\">Points by Category</h4>\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n                {Object.entries(results.categoryBreakdown).map(([category, points]) => (\r\n                  <div key={category} className=\"text-center\">\r\n                    <div className=\"text-sm font-medium text-muted-foreground\">{category}</div>\r\n                    <div className=\"text-lg font-bold text-primary\">{points} points</div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </Card>\r\n          )}\r\n\r\n          <div className=\"mt-6 p-4 bg-muted rounded-lg\">\r\n            <h4 className=\"font-semibold mb-2\">LEED Certification Levels</h4>\r\n            <div className=\"text-sm text-muted-foreground space-y-1\">\r\n              <div className=\"flex justify-between\">\r\n                <span>Certified:</span>\r\n                <span className=\"font-medium\">40-49 points</span>\r\n              </div>\r\n              <div className=\"flex justify-between\">\r\n                <span>Silver:</span>\r\n                <span className=\"font-medium\">50-59 points</span>\r\n              </div>\r\n              <div className=\"flex justify-between\">\r\n                <span>Gold:</span>\r\n                <span className=\"font-medium\">60-79 points</span>\r\n              </div>\r\n              <div className=\"flex justify-between\">\r\n                <span>Platinum:</span>\r\n                <span className=\"font-medium\">80+ points</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};"],"names":["LEEDCalculator","onCalculationUpdate","leedItems","setLeedItems","useState","results","setResults","selectedMaterials","setSelectedMaterials","comparisonEnabled","setComparisonEnabled","calculateLEED","totalPoints","item","sum","certificationLevel","pointsToGold","carbonImpact","categoryBreakdown","calculationResults","handleItemToggle","itemId","prev","getCertificationColor","level","categories","acc","jsxs","Card","jsx","CardHeader","CardTitle","Award","CardContent","category","items","Checkbox","Label","Button","ComplianceFlag","EmbodiedCarbonClassifier","MaterialComparisonToggle","material","EnhancedCalculatorResults","points"],"mappings":"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"}