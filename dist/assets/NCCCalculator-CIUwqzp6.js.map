{"version":3,"file":"NCCCalculator-CIUwqzp6.js","sources":["../../src/components/calculator/calculators/NCCCalculator.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Building, RotateCcw } from 'lucide-react';\r\nimport { EnhancedCalculatorResults } from '../enhanced';\r\nimport { ExtendedMaterialData } from '@/lib/materials/materialTypes';\r\nimport ComplianceFlag from '@/components/ui/compliance-flag';\r\n\r\ninterface NCCCalculatorProps {\r\n  onCalculationUpdate: (data: NCCData) => void;\r\n  defaultValues?: Partial<typeof initialInputs>;\r\n}\r\n\r\nconst initialInputs = {\r\n  floorArea: 0,\r\n  energy: 0,\r\n  renewable: 0,\r\n  occupants: 0\r\n};\r\n\r\ninterface NCCData {\r\n  totalEmissions: number;\r\n  efficiencyRating: number;\r\n  isCompliant: boolean;\r\n  energyIntensity: number;\r\n  materialEmissions?: number;\r\n  transportEmissions?: number;\r\n  energyEmissions?: number;\r\n}\r\n\r\nexport const NCCCalculator: React.FC<NCCCalculatorProps> = ({ \r\n  onCalculationUpdate, \r\n  defaultValues \r\n}) => {\r\n  const [inputs, setInputs] = useState({ ...initialInputs, ...defaultValues });\r\n\r\n  const [results, setResults] = useState<NCCData | null>(null);\r\n  const [selectedMaterials, setSelectedMaterials] = useState<ExtendedMaterialData[]>([]);\r\n\r\n  // Apply default values when they change\r\n  useEffect(() => {\r\n    if (defaultValues) {\r\n      setInputs({ ...initialInputs, ...defaultValues });\r\n    }\r\n  }, [defaultValues]);\r\n\r\n  const calculateNCC = () => {\r\n    const { floorArea, energy, renewable, occupants } = inputs;\r\n\r\n    // NCC calculation logic\r\n    const energyIntensity = floorArea > 0 ? energy / floorArea : 0;\r\n    const renewableReduction = (renewable / 100) * energy;\r\n    const netEnergy = energy - renewableReduction;\r\n    const emissionFactor = 0.82; // kg CO2-e per kWh (Australian grid average)\r\n    const totalEmissions = netEnergy * emissionFactor;\r\n\r\n    // Energy efficiency rating (1-10 scale)\r\n    let efficiencyRating = 10;\r\n    if (energyIntensity > 200) {\r\n      efficiencyRating = Math.max(1, 10 - Math.floor((energyIntensity - 200) / 50));\r\n    } else if (energyIntensity > 100) {\r\n      efficiencyRating = Math.max(5, 10 - Math.floor((energyIntensity - 100) / 25));\r\n    }\r\n\r\n    // Compliance status\r\n    const isCompliant = energyIntensity <= 150 && renewable >= 10;\r\n\r\n    const calculationResults: NCCData = {\r\n      totalEmissions,\r\n      efficiencyRating,\r\n      isCompliant,\r\n      energyIntensity,\r\n      materialEmissions: totalEmissions * 0.6, // 60% from materials\r\n      transportEmissions: totalEmissions * 0.2, // 20% from transport\r\n      energyEmissions: totalEmissions * 0.2 // 20% from energy\r\n    };\r\n\r\n    setResults(calculationResults);\r\n    onCalculationUpdate(calculationResults);\r\n  };\r\n\r\n  const handleInputChange = (field: keyof typeof inputs, value: string) => {\r\n    setInputs(prev => ({\r\n      ...prev,\r\n      [field]: parseFloat(value) || 0\r\n    }));\r\n  };\r\n\r\n  const resetCalculator = () => {\r\n    setInputs(initialInputs);\r\n    setResults(null);\r\n    setSelectedMaterials([]);\r\n    onCalculationUpdate({\r\n      totalEmissions: 0,\r\n      efficiencyRating: 0,\r\n      isCompliant: false,\r\n      energyIntensity: 0\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle className=\"flex items-center justify-between\">\r\n            <div className=\"flex items-center gap-2\">\r\n              <Building className=\"h-5 w-5\" />\r\n              NCC Calculation Inputs\r\n            </div>\r\n            <Button\r\n              variant=\"outline\"\r\n              size=\"sm\"\r\n              onClick={resetCalculator}\r\n              className=\"text-destructive hover:text-destructive\"\r\n            >\r\n              <RotateCcw className=\"w-4 h-4 mr-2\" />\r\n              Reset\r\n            </Button>\r\n          </CardTitle>\r\n        </CardHeader>\r\n        <CardContent className=\"space-y-4\">\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n            <div className=\"space-y-2\">\r\n              <Label htmlFor=\"ncc-floor-area\">Floor Area (m²)</Label>\r\n              <Input\r\n                id=\"ncc-floor-area\"\r\n                type=\"number\"\r\n                value={inputs.floorArea || ''}\r\n                onChange={(e) => handleInputChange('floorArea', e.target.value)}\r\n                placeholder=\"Enter floor area\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"space-y-2\">\r\n              <Label htmlFor=\"ncc-energy\">Annual Energy Consumption (kWh)</Label>\r\n              <Input\r\n                id=\"ncc-energy\"\r\n                type=\"number\"\r\n                value={inputs.energy || ''}\r\n                onChange={(e) => handleInputChange('energy', e.target.value)}\r\n                placeholder=\"Enter annual energy consumption\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"space-y-2\">\r\n              <Label htmlFor=\"ncc-renewable\">Renewable Energy (%)</Label>\r\n              <Input\r\n                id=\"ncc-renewable\"\r\n                type=\"number\"\r\n                value={inputs.renewable || ''}\r\n                onChange={(e) => handleInputChange('renewable', e.target.value)}\r\n                placeholder=\"Enter percentage of renewable energy\"\r\n                min=\"0\"\r\n                max=\"100\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"space-y-2\">\r\n              <Label htmlFor=\"ncc-occupants\">Number of Occupants</Label>\r\n              <Input\r\n                id=\"ncc-occupants\"\r\n                type=\"number\"\r\n                value={inputs.occupants || ''}\r\n                onChange={(e) => handleInputChange('occupants', e.target.value)}\r\n                placeholder=\"Enter number of occupants\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <Button onClick={calculateNCC} className=\"w-full\">\r\n            Calculate NCC Compliance\r\n          </Button>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Enhanced Results Section */}\r\n      {results && (\r\n        <div className=\"space-y-6\">\r\n          {/* Quick Compliance Overview */}\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center justify-between\">\r\n                NCC 2025 Results\r\n                <ComplianceFlag \r\n                  standard=\"ncc2025\" \r\n                  status={results.isCompliant ? 'compliant' : 'breach'}\r\n                  currentValue={results.energyIntensity}\r\n                  threshold={150}\r\n                />\r\n              </CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\r\n                <Card className=\"p-4\">\r\n                  <div className=\"text-sm text-muted-foreground\">Efficiency Rating</div>\r\n                  <div className=\"text-2xl font-bold text-primary\">\r\n                    {results.efficiencyRating}/10\r\n                  </div>\r\n                </Card>\r\n\r\n                <Card className=\"p-4\">\r\n                  <div className=\"text-sm text-muted-foreground\">Total Emissions</div>\r\n                  <div className=\"text-2xl font-bold text-destructive\">\r\n                    {(results.totalEmissions / 1000).toFixed(1)} t CO₂-e\r\n                  </div>\r\n                </Card>\r\n\r\n                <Card className=\"p-4\">\r\n                  <div className=\"text-sm text-muted-foreground\">Energy Intensity</div>\r\n                  <div className=\"text-2xl font-bold text-blue-600\">\r\n                    {results.energyIntensity.toFixed(1)} kWh/m²\r\n                  </div>\r\n                </Card>\r\n\r\n                <Card className={`p-4 ${results.isCompliant ? 'bg-green-50 dark:bg-green-950/20' : 'bg-red-50 dark:bg-red-950/20'}`}>\r\n                  <div className=\"text-sm text-muted-foreground\">Compliance Status</div>\r\n                  <div className={`text-2xl font-bold ${results.isCompliant ? 'text-green-700 dark:text-green-300' : 'text-red-700 dark:text-red-300'}`}>\r\n                    {results.isCompliant ? 'Compliant' : 'Non-Compliant'}\r\n                  </div>\r\n                </Card>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          {/* Enhanced Calculator Results */}\r\n          <EnhancedCalculatorResults\r\n            result={{\r\n              totalEmissions: results.totalEmissions,\r\n              materialEmissions: results.materialEmissions || 0,\r\n              transportEmissions: results.transportEmissions || 0,\r\n              energyEmissions: results.energyEmissions || 0,\r\n              breakdown: {\r\n                materials: results.materialEmissions || 0,\r\n                transport: results.transportEmissions || 0,\r\n                energy: results.energyEmissions || 0,\r\n              },\r\n              breakdownByMaterial: {},\r\n              breakdownByTransport: { electricity: results.energyEmissions || 0 },\r\n              breakdownByEnergy: { grid: results.energyEmissions || 0 }\r\n            }}\r\n            materials={selectedMaterials}\r\n            onMaterialSelect={(material) => {\r\n              // Handle material selection for replacement\r\n              console.log('Selected material for optimization:', material);\r\n            }}\r\n          />\r\n\r\n          {/* NCC-Specific Guidelines */}\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>NCC 2025 Compliance Guidelines</CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                <div>\r\n                  <h4 className=\"font-semibold mb-3\">Energy Requirements</h4>\r\n                  <ul className=\"text-sm text-muted-foreground space-y-2\">\r\n                    <li className=\"flex items-center gap-2\">\r\n                      <div className={`w-2 h-2 rounded-full ${results.energyIntensity <= 150 ? 'bg-green-500' : 'bg-red-500'}`} />\r\n                      Energy intensity ≤ 150 kWh/m² for compliance\r\n                    </li>\r\n                    <li className=\"flex items-center gap-2\">\r\n                      <div className={`w-2 h-2 rounded-full ${inputs.renewable >= 10 ? 'bg-green-500' : 'bg-red-500'}`} />\r\n                      Minimum 10% renewable energy required\r\n                    </li>\r\n                    <li className=\"flex items-center gap-2\">\r\n                      <div className={`w-2 h-2 rounded-full ${results.efficiencyRating >= 7 ? 'bg-green-500' : 'bg-yellow-500'}`} />\r\n                      Energy efficiency rating of 7+ indicates good performance\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n                <div>\r\n                  <h4 className=\"font-semibold mb-3\">Improvement Opportunities</h4>\r\n                  <ul className=\"text-sm text-muted-foreground space-y-2\">\r\n                    <li>• Building envelope improvements</li>\r\n                    <li>• Enhanced insulation systems</li>\r\n                    <li>• High-performance glazing</li>\r\n                    <li>• Renewable energy integration</li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};"],"names":["initialInputs","NCCCalculator","onCalculationUpdate","defaultValues","inputs","setInputs","useState","results","setResults","selectedMaterials","setSelectedMaterials","useEffect","calculateNCC","floorArea","energy","renewable","occupants","energyIntensity","renewableReduction","totalEmissions","efficiencyRating","isCompliant","calculationResults","handleInputChange","field","value","prev","resetCalculator","jsxs","Card","jsx","CardHeader","CardTitle","Building","Button","RotateCcw","CardContent","Label","Input","e","ComplianceFlag","EnhancedCalculatorResults","material"],"mappings":"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"}