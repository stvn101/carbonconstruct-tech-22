{"version":3,"file":"MaterialDatabase-Cu0XWkao.js","sources":["../../src/lib/carbonFactors.ts","../../src/lib/materials/index.ts","../../src/hooks/useSimplifiedMaterials.ts","../../src/components/materials/RecyclabilityIndicator.tsx","../../src/components/materials/SimplifiedMaterialDatabase.tsx","../../src/components/materials/MaterialDatabase.tsx","../../src/pages/MaterialDatabase.tsx"],"sourcesContent":["// Carbon factors data for materials, transport, and energy calculations\r\n// Enhanced with Australian-specific factors and NCC 2025 compliance data\r\n\r\n// Material carbon factors (kgCO2e/kg)\r\nexport const materialCarbonFactors = {\r\n  concrete: 0.13,\r\n  steel: 1.70,\r\n  aluminum: 8.40,\r\n  timber: 0.40,\r\n  glass: 1.10,\r\n  plastic: 3.50,\r\n  insulation: 1.80,\r\n  brick: 0.50,\r\n  // Add more materials as needed\r\n};\r\n\r\n// Transport carbon factors (kgCO2e/tonne-km)\r\nexport const transportCarbonFactors = {\r\n  truck: 0.07,\r\n  train: 0.03,\r\n  ship: 0.01,\r\n  plane: 0.70,\r\n  // Add more transport modes as needed\r\n};\r\n\r\n// Energy carbon factors (kgCO2e/kWh) - Australian grid average\r\nexport const energyCarbonFactors = {\r\n  electricity: 0.50, // Australian average, update based on region\r\n  naturalGas: 0.18,\r\n  renewableEnergy: 0.05, // Weighted average of renewables\r\n  // Add more energy sources as needed\r\n};\r\n\r\n// Function to calculate material carbon footprint\r\nexport const calculateMaterialFootprint = (material: string, quantity: number): number => {\r\n  const factor = materialCarbonFactors[material];\r\n  if (!factor) {\r\n    console.warn(`Carbon factor not found for material: ${material}`);\r\n    return 0;\r\n  }\r\n  return factor * quantity;\r\n};\r\n\r\n// Function to calculate transport carbon footprint\r\nexport const calculateTransportFootprint = (mode: string, distance: number, weight: number): number => {\r\n  const factor = transportCarbonFactors[mode];\r\n  if (!factor) {\r\n    console.warn(`Carbon factor not found for transport mode: ${mode}`);\r\n    return 0;\r\n  }\r\n  return factor * distance * (weight / 1000); // weight in tonnes\r\n};\r\n\r\n// Function to calculate energy carbon footprint\r\nexport const calculateEnergyFootprint = (energySource: string, amount: number): number => {\r\n  const factor = energyCarbonFactors[energySource];\r\n  if (!factor) {\r\n    console.warn(`Carbon factor not found for energy source: ${energySource}`);\r\n    return 0;\r\n  }\r\n  return factor * amount;\r\n};\r\n","\r\nimport { materialCarbonFactors } from '@/lib/carbonFactors';\r\nimport { ExtendedMaterialData } from './materialTypes';\r\n\r\n// Re-export types and constants\r\nexport * from './materialTypes';\r\n\r\n// Export constants - use the correct import name\r\nexport const MATERIAL_FACTORS = materialCarbonFactors;\r\n\r\n// Define material types enum\r\nexport const MATERIAL_TYPES = {\r\n  CONCRETE: 'concrete',\r\n  STEEL: 'steel',\r\n  TIMBER: 'timber',\r\n  GLASS: 'glass',\r\n  BRICK: 'brick',\r\n  INSULATION: 'insulation',\r\n  ALUMINUM: 'aluminum',\r\n  PLASTIC: 'plastic',\r\n  COPPER: 'copper',\r\n  GYPSUM: 'gypsum',\r\n  RECYCLED: 'recycled',\r\n  SUSTAINABLE: 'sustainable',\r\n  NATURAL: 'natural'\r\n} as const;\r\n\r\nexport const REGIONS = {\r\n  AUSTRALIA: 'Australia',\r\n  EUROPE: 'Europe',\r\n  NORTH_AMERICA: 'North America',\r\n  ASIA: 'Asia',\r\n  GLOBAL: 'Global'\r\n} as const;\r\n\r\n// Create and export extended materials data with proper typing\r\nexport const EXTENDED_MATERIALS: Record<string, ExtendedMaterialData> = Object.entries(materialCarbonFactors).reduce((acc, [key, factor]) => {\r\n  // Transform to ExtendedMaterialData format with proper typing\r\n  acc[key] = {\r\n    name: key,  // Use key as name since materialCarbonFactors is just numbers\r\n    factor,\r\n    unit: 'kg',\r\n    region: 'Australia',\r\n    tags: ['construction'],\r\n    sustainabilityScore: Math.floor(Math.random() * 40) + 60,\r\n    recyclability: ['High', 'Medium', 'Low'][Math.floor(Math.random() * 3)] as 'High' | 'Medium' | 'Low',\r\n    alternativeTo: undefined,\r\n    notes: ''\r\n  };\r\n  return acc;\r\n}, {} as Record<string, ExtendedMaterialData>);\r\n\r\n// Helper function to filter materials\r\nexport const filterMaterials = (predicate: (material: ExtendedMaterialData) => boolean): ExtendedMaterialData[] => {\r\n  return Object.values(EXTENDED_MATERIALS).filter(predicate);\r\n};\r\n","\r\nimport { useState, useEffect, useMemo, useCallback } from 'react';\r\nimport { ExtendedMaterialData } from '@/lib/materials/materialTypes';\r\nimport { EXTENDED_MATERIALS } from '@/lib/materials/index';\r\nimport { logger } from '@/services/logging/EnhancedLoggingService';\r\nimport { performanceMonitor } from '@/services/performance/PerformanceMonitor';\r\n\r\nexport interface UseSimplifiedMaterialsReturn {\r\n  allMaterials: ExtendedMaterialData[];\r\n  filteredMaterials: ExtendedMaterialData[];\r\n  searchTerm: string;\r\n  setSearchTerm: (term: string) => void;\r\n  selectedCategory: string;\r\n  setSelectedCategory: (category: string) => void;\r\n  selectedTag: string;\r\n  setSelectedTag: (tag: string) => void;\r\n  loading: boolean;\r\n  error: Error | null;\r\n  totalCount: number;\r\n  refreshMaterials: () => void;\r\n  resetFilters: () => void;\r\n  categories: string[];\r\n  tags: string[];\r\n}\r\n\r\nexport const useSimplifiedMaterials = (): UseSimplifiedMaterialsReturn => {\r\n  const [allMaterials, setAllMaterials] = useState<ExtendedMaterialData[]>([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [selectedCategory, setSelectedCategory] = useState('all');\r\n  const [selectedTag, setSelectedTag] = useState('all');\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<Error | null>(null);\r\n\r\n  // Initialize materials data\r\n  const initializeMaterials = useCallback(() => {\r\n    const timer = performanceMonitor.startTimer('materials-initialization');\r\n    \r\n    try {\r\n      logger.info('Initializing simplified materials', 'UseSimplifiedMaterials');\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      // Convert EXTENDED_MATERIALS object to array with proper typing\r\n      const materialsArray: ExtendedMaterialData[] = Object.entries(EXTENDED_MATERIALS).map(([key, material]) => ({\r\n        id: key,\r\n        name: material.name,\r\n        category: material.category || 'general',\r\n        carbon_footprint_kgco2e_kg: material.factor,\r\n        factor: material.factor,\r\n        unit: material.unit,\r\n        region: material.region,\r\n        tags: material.tags || [],\r\n        sustainabilityScore: material.sustainabilityScore,\r\n        recyclability: material.recyclability,\r\n        alternativeTo: material.alternativeTo,\r\n        notes: material.notes,\r\n        // Add additional properties for compatibility\r\n        scope1_emissions: material.factor * 0.6,\r\n        scope2_emissions: material.factor * 0.2,\r\n        scope3_emissions: material.factor * 0.2,\r\n        environmental_impact_score: material.sustainabilityScore,\r\n        carbon_intensity_category: material.factor < 0.1 ? 'low' : material.factor < 0.5 ? 'medium' : 'high'\r\n      }));\r\n      \r\n      setAllMaterials(materialsArray);\r\n      logger.debug('Materials initialized successfully', 'UseSimplifiedMaterials', {\r\n        count: materialsArray.length\r\n      });\r\n      \r\n    } catch (err) {\r\n      const error = err instanceof Error ? err : new Error('Failed to initialize materials');\r\n      logger.error('Failed to initialize materials', 'UseSimplifiedMaterials', { error });\r\n      setError(error);\r\n    } finally {\r\n      setLoading(false);\r\n      timer();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    initializeMaterials();\r\n  }, [initializeMaterials]);\r\n\r\n  // Memoized filtered materials\r\n  const filteredMaterials = useMemo(() => {\r\n    const timer = performanceMonitor.startTimer('materials-filtering');\r\n    \r\n    try {\r\n      let filtered = allMaterials;\r\n\r\n      // Apply search filter\r\n      if (searchTerm.trim()) {\r\n        const searchLower = searchTerm.toLowerCase().trim();\r\n        filtered = filtered.filter(material =>\r\n          material.name.toLowerCase().includes(searchLower) ||\r\n          material.category?.toLowerCase().includes(searchLower) ||\r\n          material.tags?.some(tag => tag.toLowerCase().includes(searchLower))\r\n        );\r\n      }\r\n\r\n      // Apply category filter\r\n      if (selectedCategory !== 'all') {\r\n        filtered = filtered.filter(material => material.category === selectedCategory);\r\n      }\r\n\r\n      // Apply tag filter\r\n      if (selectedTag !== 'all') {\r\n        filtered = filtered.filter(material => \r\n          material.tags?.includes(selectedTag)\r\n        );\r\n      }\r\n\r\n      logger.debug('Materials filtered', 'UseSimplifiedMaterials', {\r\n        totalCount: allMaterials.length,\r\n        filteredCount: filtered.length,\r\n        searchTerm,\r\n        selectedCategory,\r\n        selectedTag\r\n      });\r\n\r\n      return filtered;\r\n    } finally {\r\n      timer();\r\n    }\r\n  }, [allMaterials, searchTerm, selectedCategory, selectedTag]);\r\n\r\n  // Get unique categories\r\n  const categories = useMemo(() => {\r\n    const uniqueCategories = Array.from(\r\n      new Set(allMaterials.map(m => m.category).filter(Boolean))\r\n    ).sort();\r\n    return ['all', ...uniqueCategories];\r\n  }, [allMaterials]);\r\n\r\n  // Get unique tags\r\n  const tags = useMemo(() => {\r\n    const allTags = allMaterials.flatMap(m => m.tags || []);\r\n    const uniqueTags = Array.from(new Set(allTags)).sort();\r\n    return ['all', ...uniqueTags];\r\n  }, [allMaterials]);\r\n\r\n  const refreshMaterials = useCallback(() => {\r\n    logger.info('Refreshing materials data', 'UseSimplifiedMaterials');\r\n    initializeMaterials();\r\n  }, [initializeMaterials]);\r\n\r\n  const resetFilters = useCallback(() => {\r\n    logger.debug('Resetting material filters', 'UseSimplifiedMaterials');\r\n    setSearchTerm('');\r\n    setSelectedCategory('all');\r\n    setSelectedTag('all');\r\n  }, []);\r\n\r\n  return {\r\n    allMaterials,\r\n    filteredMaterials,\r\n    searchTerm,\r\n    setSearchTerm,\r\n    selectedCategory,\r\n    setSelectedCategory,\r\n    selectedTag,\r\n    setSelectedTag,\r\n    loading,\r\n    error,\r\n    totalCount: allMaterials.length,\r\n    refreshMaterials,\r\n    resetFilters,\r\n    categories,\r\n    tags\r\n  };\r\n};\r\n","\r\nimport React from 'react';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Recycle } from 'lucide-react';\r\n\r\ninterface RecyclabilityIndicatorProps {\r\n  recyclability?: 'High' | 'Medium' | 'Low' | string;\r\n  showIcon?: boolean;\r\n  size?: 'sm' | 'md' | 'lg';\r\n  className?: string;\r\n}\r\n\r\nconst RecyclabilityIndicator: React.FC<RecyclabilityIndicatorProps> = ({\r\n  recyclability,\r\n  showIcon = true,\r\n  size = 'md',\r\n  className = ''\r\n}) => {\r\n  if (!recyclability) return null;\r\n\r\n  // Normalize recyclability value\r\n  const normalizedRecyclability = recyclability.charAt(0).toUpperCase() + recyclability.slice(1).toLowerCase();\r\n  \r\n  // Traffic light colors based on recyclability\r\n  const getTrafficLightStyle = (level: string) => {\r\n    switch (level) {\r\n      case 'High':\r\n        return {\r\n          color: 'bg-green-100 text-green-800 border-green-200 hover:bg-green-100',\r\n          emoji: '🟢',\r\n          textColor: 'text-green-700'\r\n        };\r\n      case 'Medium':\r\n        return {\r\n          color: 'bg-orange-100 text-orange-800 border-orange-200 hover:bg-orange-100',\r\n          emoji: '🟠',\r\n          textColor: 'text-orange-700'\r\n        };\r\n      case 'Low':\r\n        return {\r\n          color: 'bg-red-100 text-red-800 border-red-200 hover:bg-red-100',\r\n          emoji: '🔴',\r\n          textColor: 'text-red-700'\r\n        };\r\n      default:\r\n        return {\r\n          color: 'bg-gray-100 text-gray-800 border-gray-200 hover:bg-gray-100',\r\n          emoji: '⚪',\r\n          textColor: 'text-gray-700'\r\n        };\r\n    }\r\n  };\r\n\r\n  const style = getTrafficLightStyle(normalizedRecyclability);\r\n  \r\n  const sizeClasses = {\r\n    sm: 'text-xs px-2 py-1',\r\n    md: 'text-sm px-3 py-1',\r\n    lg: 'text-base px-4 py-2'\r\n  };\r\n\r\n  return (\r\n    <Badge \r\n      className={`${style.color} ${sizeClasses[size]} flex items-center gap-1 font-medium ${className}`}\r\n      variant=\"outline\"\r\n    >\r\n      {showIcon && <Recycle className=\"h-3 w-3\" />}\r\n      <span>{style.emoji}</span>\r\n      <span>{normalizedRecyclability}</span>\r\n    </Badge>\r\n  );\r\n};\r\n\r\nexport default RecyclabilityIndicator;\r\n","\r\n/**\r\n * Simplified Material Database - Direct display of all materials\r\n */\r\nimport React from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport { Database, Search, Filter, RefreshCw, AlertCircle } from \"lucide-react\";\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\r\nimport { useSimplifiedMaterials } from \"@/hooks/useSimplifiedMaterials\";\r\nimport { ExtendedMaterialData } from \"@/lib/materials/materialTypes\";\r\nimport ErrorBoundaryWrapper from \"@/components/error/ErrorBoundaryWrapper\";\r\nimport RecyclabilityIndicator from \"./RecyclabilityIndicator\";\r\n\r\nconst MaterialCard: React.FC<{ material: ExtendedMaterialData }> = ({ material }) => (\r\n  <Card className=\"h-full hover:shadow-md transition-shadow\">\r\n    <CardHeader className=\"pb-3\">\r\n      <CardTitle className=\"text-sm font-medium line-clamp-2\">\r\n        {material.name}\r\n      </CardTitle>\r\n      <CardDescription className=\"text-xs flex items-center justify-between\">\r\n        <span>{material.category} • {material.region}</span>\r\n        <RecyclabilityIndicator recyclability={material.recyclability} size=\"sm\" showIcon={false} />\r\n      </CardDescription>\r\n    </CardHeader>\r\n    <CardContent className=\"space-y-3\">\r\n      <div className=\"space-y-2\">\r\n        <div className=\"flex justify-between text-xs\">\r\n          <span className=\"text-muted-foreground\">Carbon Footprint:</span>\r\n          <span className=\"font-medium\">\r\n            {(material.carbon_footprint_kgco2e_kg || material.factor || 0).toFixed(2)} kg CO₂e/kg\r\n          </span>\r\n        </div>\r\n        \r\n        {material.scope1_emissions && (\r\n          <div className=\"text-xs space-y-1\">\r\n            <div className=\"flex justify-between\">\r\n              <span className=\"text-muted-foreground\">Scope 1:</span>\r\n              <span>{material.scope1_emissions.toFixed(2)} kg CO₂e</span>\r\n            </div>\r\n            <div className=\"flex justify-between\">\r\n              <span className=\"text-muted-foreground\">Scope 2:</span>\r\n              <span>{material.scope2_emissions?.toFixed(2)} kg CO₂e</span>\r\n            </div>\r\n            <div className=\"flex justify-between\">\r\n              <span className=\"text-muted-foreground\">Scope 3:</span>\r\n              <span>{material.scope3_emissions?.toFixed(2)} kg CO₂e</span>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      \r\n      <div className=\"space-y-2\">\r\n        <div className=\"flex justify-between text-xs\">\r\n          <span className=\"text-muted-foreground\">Sustainability Score:</span>\r\n          <span className=\"font-medium\">\r\n            {material.sustainabilityScore || material.environmental_impact_score || 'N/A'}\r\n          </span>\r\n        </div>\r\n        \r\n        {material.carbon_intensity_category && (\r\n          <Badge \r\n            variant={\r\n              material.carbon_intensity_category === 'low' ? 'default' : \r\n              material.carbon_intensity_category === 'medium' ? 'secondary' : \r\n              'destructive'\r\n            }\r\n            className=\"text-xs\"\r\n          >\r\n            {material.carbon_intensity_category} impact\r\n          </Badge>\r\n        )}\r\n      </div>\r\n      \r\n      {material.tags && material.tags.length > 0 && (\r\n        <div className=\"flex flex-wrap gap-1\">\r\n          {material.tags.slice(0, 3).map((tag, index) => (\r\n            <Badge key={index} variant=\"outline\" className=\"text-xs\">\r\n              {tag}\r\n            </Badge>\r\n          ))}\r\n          {material.tags.length > 3 && (\r\n            <Badge variant=\"outline\" className=\"text-xs\">\r\n              +{material.tags.length - 3}\r\n            </Badge>\r\n          )}\r\n        </div>\r\n      )}\r\n    </CardContent>\r\n  </Card>\r\n);\r\n\r\nconst SimplifiedMaterialDatabase: React.FC = () => {\r\n  const {\r\n    allMaterials,\r\n    filteredMaterials,\r\n    searchTerm,\r\n    setSearchTerm,\r\n    selectedCategory,\r\n    setSelectedCategory,\r\n    selectedTag,\r\n    setSelectedTag,\r\n    loading,\r\n    error,\r\n    totalCount,\r\n    refreshMaterials,\r\n    resetFilters,\r\n    categories,\r\n    tags\r\n  } = useSimplifiedMaterials();\r\n\r\n  return (\r\n    <ErrorBoundaryWrapper feature=\"Simplified Material Database\">\r\n      <motion.div\r\n        className=\"container mx-auto px-4 py-8\"\r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        transition={{ duration: 0.4 }}\r\n      >\r\n        {/* Header */}\r\n        <div className=\"text-center mb-8\">\r\n          <div className=\"flex justify-center mb-4\">\r\n            <div className=\"inline-flex h-12 w-12 items-center justify-center rounded-lg bg-carbon-100\">\r\n              <Database className=\"h-6 w-6 text-carbon-700\" />\r\n            </div>\r\n          </div>\r\n          <h1 className=\"text-3xl font-bold mb-2\">\r\n            Australian Materials Database\r\n          </h1>\r\n          <p className=\"text-lg text-muted-foreground mb-4\">\r\n            Construction materials with traffic light recyclability system\r\n          </p>\r\n          \r\n          <div className=\"flex items-center justify-center gap-4 text-sm text-muted-foreground\">\r\n            <span>Total Materials: {totalCount}</span>\r\n            <span>•</span>\r\n            <span>Showing: {filteredMaterials.length}</span>\r\n            <Button \r\n              variant=\"ghost\" \r\n              size=\"sm\"\r\n              onClick={refreshMaterials}\r\n              disabled={loading}\r\n              className=\"ml-2\"\r\n            >\r\n              <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Error Display */}\r\n        {error && (\r\n          <Alert className=\"mb-6\">\r\n            <AlertCircle className=\"h-4 w-4\" />\r\n            <AlertDescription>\r\n              Error loading materials: {error.message}\r\n              <Button variant=\"outline\" size=\"sm\" onClick={refreshMaterials} className=\"ml-2\">\r\n                Retry\r\n              </Button>\r\n            </AlertDescription>\r\n          </Alert>\r\n        )}\r\n\r\n        {/* Filters */}\r\n        <Card className=\"mb-6\">\r\n          <CardHeader>\r\n            <CardTitle className=\"flex items-center text-lg\">\r\n              <Filter className=\"h-5 w-5 mr-2\" />\r\n              Search & Filter\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\r\n              <div className=\"relative\">\r\n                <Search className=\"absolute left-3 top-3 h-4 w-4 text-muted-foreground\" />\r\n                <Input\r\n                  placeholder=\"Search materials...\"\r\n                  value={searchTerm}\r\n                  onChange={(e) => setSearchTerm(e.target.value)}\r\n                  className=\"pl-10\"\r\n                />\r\n              </div>\r\n              \r\n              <Select value={selectedCategory} onValueChange={setSelectedCategory}>\r\n                <SelectTrigger>\r\n                  <SelectValue placeholder=\"Category\" />\r\n                </SelectTrigger>\r\n                <SelectContent>\r\n                  {categories.map(category => (\r\n                    <SelectItem key={category} value={category}>\r\n                      {category === 'all' ? 'All Categories' : category}\r\n                    </SelectItem>\r\n                  ))}\r\n                </SelectContent>\r\n              </Select>\r\n              \r\n              <Select value={selectedTag} onValueChange={setSelectedTag}>\r\n                <SelectTrigger>\r\n                  <SelectValue placeholder=\"Tag\" />\r\n                </SelectTrigger>\r\n                <SelectContent>\r\n                  {tags.map(tag => (\r\n                    <SelectItem key={tag} value={tag}>\r\n                      {tag === 'all' ? 'All Tags' : tag}\r\n                    </SelectItem>\r\n                  ))}\r\n                </SelectContent>\r\n              </Select>\r\n              \r\n              <Button variant=\"outline\" onClick={resetFilters}>\r\n                Reset Filters\r\n              </Button>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* Materials Grid */}\r\n        {loading ? (\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4\">\r\n            {Array.from({ length: 8 }).map((_, i) => (\r\n              <Card key={i} className=\"h-64 animate-pulse\">\r\n                <CardHeader>\r\n                  <div className=\"h-4 bg-gray-200 rounded w-3/4\"></div>\r\n                  <div className=\"h-3 bg-gray-200 rounded w-1/2\"></div>\r\n                </CardHeader>\r\n                <CardContent>\r\n                  <div className=\"space-y-2\">\r\n                    <div className=\"h-3 bg-gray-200 rounded\"></div>\r\n                    <div className=\"h-3 bg-gray-200 rounded w-2/3\"></div>\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n            ))}\r\n          </div>\r\n        ) : filteredMaterials.length > 0 ? (\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4\">\r\n            {filteredMaterials.map((material) => (\r\n              <MaterialCard key={material.id} material={material} />\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <Card className=\"text-center py-12\">\r\n            <CardContent>\r\n              <Database className=\"h-12 w-12 mx-auto mb-4 text-muted-foreground\" />\r\n              <h3 className=\"text-lg font-semibold mb-2\">No materials found</h3>\r\n              <p className=\"text-muted-foreground mb-4\">\r\n                Try adjusting your search terms or filters\r\n              </p>\r\n              <Button onClick={resetFilters}>Reset Filters</Button>\r\n            </CardContent>\r\n          </Card>\r\n        )}\r\n      </motion.div>\r\n    </ErrorBoundaryWrapper>\r\n  );\r\n};\r\n\r\nexport default SimplifiedMaterialDatabase;\r\n","\r\nimport React from \"react\";\r\nimport SimplifiedMaterialDatabase from \"./SimplifiedMaterialDatabase\";\r\n\r\n/**\r\n * MaterialDatabase component - main entry point for the materials database feature\r\n * Now uses the simplified, single-source approach to display all 216 materials\r\n */\r\nconst MaterialDatabase: React.FC = () => {\r\n  return <SimplifiedMaterialDatabase />;\r\n};\r\n\r\nexport default MaterialDatabase;\r\n","\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@tanstack/react-query\";\r\nimport { motion } from \"framer-motion\";\r\nimport Navbar from \"@/components/Navbar\";\r\nimport Footer from \"@/components/Footer\";\r\nimport MaterialDatabase from \"@/components/materials/MaterialDatabase\";\r\nimport { useAuth } from \"@/contexts/auth\";\r\n\r\nconst MaterialDatabasePage = () => {\r\n  const { profile } = useAuth();\r\n  \r\n  return (\r\n    <motion.div \r\n      className=\"min-h-screen flex flex-col\"\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n      transition={{ duration: 0.4 }}\r\n    >\r\n      <Navbar />\r\n      \r\n      <main className=\"flex-grow pt-24 md:pt-32\">\r\n        <div className=\"container mx-auto px-4\">\r\n          <MaterialDatabase />\r\n        </div>\r\n      </main>\r\n      \r\n      <Footer />\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default MaterialDatabasePage;\r\n"],"names":["materialCarbonFactors","EXTENDED_MATERIALS","acc","key","factor","useSimplifiedMaterials","allMaterials","setAllMaterials","useState","searchTerm","setSearchTerm","selectedCategory","setSelectedCategory","selectedTag","setSelectedTag","loading","setLoading","error","setError","initializeMaterials","useCallback","timer","performanceMonitor","logger","materialsArray","material","err","useEffect","filteredMaterials","useMemo","filtered","searchLower","_a","_b","tag","categories","m","tags","allTags","refreshMaterials","resetFilters","RecyclabilityIndicator","recyclability","showIcon","size","className","normalizedRecyclability","style","level","sizeClasses","jsxs","Badge","jsx","Recycle","MaterialCard","Card","CardHeader","CardTitle","CardDescription","CardContent","index","SimplifiedMaterialDatabase","totalCount","ErrorBoundaryWrapper","motion","Database","Button","RefreshCw","Alert","AlertCircle","AlertDescription","Filter","Search","Input","e","Select","SelectTrigger","SelectValue","SelectContent","SelectItem","category","_","i","MaterialDatabase","MaterialDatabasePage","profile","useAuth","Navbar","Footer"],"mappings":"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"}