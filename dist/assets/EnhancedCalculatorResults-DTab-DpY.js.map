{"version":3,"file":"EnhancedCalculatorResults-DTab-DpY.js","sources":["../../src/components/ui/scope-badge.tsx","../../src/components/ui/embodied-carbon-classifier.tsx","../../src/components/ui/compliance-flag.tsx","../../src/components/results/SummaryCard.tsx","../../src/components/ui/lifecycle-phase-filter.tsx","../../src/components/ui/material-comparison-toggle.tsx","../../src/components/calculator/enhanced/EnhancedCalculatorResults.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from '@/components/ui/tooltip';\r\nimport { cn } from '@/lib/utils';\r\n\r\nexport type EmissionScope = 'scope1' | 'scope2' | 'scope3' | 'combined';\r\n\r\ninterface ScopeBadgeProps {\r\n  scope: EmissionScope;\r\n  size?: 'sm' | 'md' | 'lg';\r\n  showTooltip?: boolean;\r\n  className?: string;\r\n}\r\n\r\nconst scopeConfig = {\r\n  scope1: {\r\n    label: 'Scope 1',\r\n    color: 'bg-red-100 text-red-800 hover:bg-red-100',\r\n    description: 'Direct emissions from owned or controlled sources (fuel combustion, company vehicles, etc.)'\r\n  },\r\n  scope2: {\r\n    label: 'Scope 2', \r\n    color: 'bg-orange-100 text-orange-800 hover:bg-orange-100',\r\n    description: 'Indirect emissions from purchased electricity, steam, heating and cooling'\r\n  },\r\n  scope3: {\r\n    label: 'Scope 3',\r\n    color: 'bg-blue-100 text-blue-800 hover:bg-blue-100', \r\n    description: 'All other indirect emissions in the value chain (upstream and downstream activities)'\r\n  },\r\n  combined: {\r\n    label: 'All Scopes',\r\n    color: 'bg-gray-100 text-gray-800 hover:bg-gray-100',\r\n    description: 'Combined emissions across all scopes'\r\n  }\r\n};\r\n\r\nconst ScopeBadge: React.FC<ScopeBadgeProps> = ({ \r\n  scope, \r\n  size = 'md', \r\n  showTooltip = true,\r\n  className \r\n}) => {\r\n  const config = scopeConfig[scope];\r\n  \r\n  const sizeClasses = {\r\n    sm: 'text-xs px-1.5 py-0.5',\r\n    md: 'text-sm px-2 py-1', \r\n    lg: 'text-base px-3 py-1.5'\r\n  };\r\n\r\n  const badge = (\r\n    <Badge \r\n      className={cn(\r\n        config.color,\r\n        sizeClasses[size],\r\n        'font-medium border-0',\r\n        className\r\n      )}\r\n    >\r\n      {config.label}\r\n    </Badge>\r\n  );\r\n\r\n  if (!showTooltip) {\r\n    return badge;\r\n  }\r\n\r\n  return (\r\n    <TooltipProvider>\r\n      <Tooltip>\r\n        <TooltipTrigger asChild>\r\n          {badge}\r\n        </TooltipTrigger>\r\n        <TooltipContent>\r\n          <p className=\"text-sm max-w-xs\">{config.description}</p>\r\n        </TooltipContent>\r\n      </Tooltip>\r\n    </TooltipProvider>\r\n  );\r\n};\r\n\r\nexport default ScopeBadge;","import React from 'react';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from '@/components/ui/tooltip';\r\nimport { cn } from '@/lib/utils';\r\nimport { Leaf, AlertTriangle, XCircle } from 'lucide-react';\r\n\r\nexport type EmbodiedCarbonLevel = 'low' | 'medium' | 'high';\r\n\r\ninterface EmbodiedCarbonClassifierProps {\r\n  carbonIntensity: number; // kg CO₂e/kg\r\n  size?: 'sm' | 'md' | 'lg';\r\n  showIcon?: boolean;\r\n  showTooltip?: boolean;\r\n  className?: string;\r\n}\r\n\r\n// Classification thresholds (kg CO₂e/kg)\r\nconst THRESHOLDS = {\r\n  low: 50,\r\n  medium: 150\r\n};\r\n\r\nconst getClassification = (intensity: number): EmbodiedCarbonLevel => {\r\n  if (intensity < THRESHOLDS.low) return 'low';\r\n  if (intensity < THRESHOLDS.medium) return 'medium';\r\n  return 'high';\r\n};\r\n\r\nconst classificationConfig = {\r\n  low: {\r\n    label: 'Low EC',\r\n    fullLabel: 'Low Embodied Carbon',\r\n    color: 'bg-green-100 text-green-800 hover:bg-green-100',\r\n    icon: Leaf,\r\n    description: 'Materials with low embodied carbon (< 50 kg CO₂e/kg). Excellent sustainability choice.',\r\n    borderColor: 'border-green-200'\r\n  },\r\n  medium: {\r\n    label: 'Medium EC', \r\n    fullLabel: 'Medium Embodied Carbon',\r\n    color: 'bg-orange-100 text-orange-800 hover:bg-orange-100',\r\n    icon: AlertTriangle,\r\n    description: 'Materials with moderate embodied carbon (50-150 kg CO₂e/kg). Consider alternatives when possible.',\r\n    borderColor: 'border-orange-200'\r\n  },\r\n  high: {\r\n    label: 'High EC',\r\n    fullLabel: 'High Embodied Carbon', \r\n    color: 'bg-red-100 text-red-800 hover:bg-red-100',\r\n    icon: XCircle,\r\n    description: 'Materials with high embodied carbon (> 150 kg CO₂e/kg). Explore low-carbon alternatives.',\r\n    borderColor: 'border-red-200'\r\n  }\r\n};\r\n\r\nconst EmbodiedCarbonClassifier: React.FC<EmbodiedCarbonClassifierProps> = ({\r\n  carbonIntensity,\r\n  size = 'md',\r\n  showIcon = true,\r\n  showTooltip = true,\r\n  className\r\n}) => {\r\n  const classification = getClassification(carbonIntensity);\r\n  const config = classificationConfig[classification];\r\n  const IconComponent = config.icon;\r\n\r\n  const sizeClasses = {\r\n    sm: 'text-xs px-1.5 py-0.5',\r\n    md: 'text-sm px-2 py-1',\r\n    lg: 'text-base px-3 py-1.5'\r\n  };\r\n\r\n  const iconSizes = {\r\n    sm: 'h-3 w-3',\r\n    md: 'h-4 w-4', \r\n    lg: 'h-5 w-5'\r\n  };\r\n\r\n  const badge = (\r\n    <Badge\r\n      className={cn(\r\n        config.color,\r\n        config.borderColor,\r\n        sizeClasses[size],\r\n        'font-medium border flex items-center gap-1',\r\n        className\r\n      )}\r\n    >\r\n      {showIcon && <IconComponent className={iconSizes[size]} />}\r\n      {config.label}\r\n    </Badge>\r\n  );\r\n\r\n  if (!showTooltip) {\r\n    return badge;\r\n  }\r\n\r\n  return (\r\n    <TooltipProvider>\r\n      <Tooltip>\r\n        <TooltipTrigger asChild>\r\n          {badge}\r\n        </TooltipTrigger>\r\n        <TooltipContent>\r\n          <div className=\"text-sm\">\r\n            <div className=\"font-medium\">{config.fullLabel}</div>\r\n            <div className=\"text-muted-foreground mt-1\">\r\n              {carbonIntensity.toFixed(1)} kg CO₂e/kg\r\n            </div>\r\n            <div className=\"mt-2 max-w-xs text-xs\">\r\n              {config.description}\r\n            </div>\r\n          </div>\r\n        </TooltipContent>\r\n      </Tooltip>\r\n    </TooltipProvider>\r\n  );\r\n};\r\n\r\nexport default EmbodiedCarbonClassifier;","import React from 'react';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Alert, AlertDescription } from '@/components/ui/alert';\r\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from '@/components/ui/tooltip';\r\nimport { cn } from '@/lib/utils';\r\nimport { Shield, AlertTriangle, XCircle, CheckCircle } from 'lucide-react';\r\n\r\nexport type ComplianceStandard = 'ncc2025' | 'nabers' | 'greenstar';\r\nexport type ComplianceStatus = 'compliant' | 'warning' | 'breach' | 'unknown';\r\n\r\ninterface ComplianceFlagProps {\r\n  standard: ComplianceStandard;\r\n  status: ComplianceStatus;\r\n  threshold?: number;\r\n  currentValue?: number;\r\n  size?: 'sm' | 'md' | 'lg';\r\n  variant?: 'badge' | 'alert' | 'indicator';\r\n  showDetails?: boolean;\r\n  className?: string;\r\n}\r\n\r\nconst standardConfig = {\r\n  ncc2025: {\r\n    label: 'NCC 2025',\r\n    fullName: 'National Construction Code 2025',\r\n    description: 'Australian building standards for energy efficiency and sustainability'\r\n  },\r\n  nabers: {\r\n    label: 'NABERS',\r\n    fullName: 'National Australian Built Environment Rating System', \r\n    description: 'Rating system for the environmental performance of buildings'\r\n  },\r\n  greenstar: {\r\n    label: 'Green Star',\r\n    fullName: 'Green Building Council of Australia Green Star',\r\n    description: 'Sustainability rating tool for buildings in Australia'\r\n  }\r\n};\r\n\r\nconst statusConfig = {\r\n  compliant: {\r\n    label: 'Compliant',\r\n    color: 'bg-green-100 text-green-800 hover:bg-green-100',\r\n    borderColor: 'border-green-200',\r\n    icon: CheckCircle,\r\n    alertVariant: 'default' as const\r\n  },\r\n  warning: {\r\n    label: 'Warning',\r\n    color: 'bg-yellow-100 text-yellow-800 hover:bg-yellow-100', \r\n    borderColor: 'border-yellow-200',\r\n    icon: AlertTriangle,\r\n    alertVariant: 'default' as const\r\n  },\r\n  breach: {\r\n    label: 'Breach',\r\n    color: 'bg-red-100 text-red-800 hover:bg-red-100',\r\n    borderColor: 'border-red-200', \r\n    icon: XCircle,\r\n    alertVariant: 'destructive' as const\r\n  },\r\n  unknown: {\r\n    label: 'Unknown',\r\n    color: 'bg-gray-100 text-gray-800 hover:bg-gray-100',\r\n    borderColor: 'border-gray-200',\r\n    icon: Shield,\r\n    alertVariant: 'default' as const\r\n  }\r\n};\r\n\r\nconst ComplianceFlag: React.FC<ComplianceFlagProps> = ({\r\n  standard,\r\n  status,\r\n  threshold,\r\n  currentValue,\r\n  size = 'md',\r\n  variant = 'badge',\r\n  showDetails = true,\r\n  className\r\n}) => {\r\n  const standardInfo = standardConfig[standard];\r\n  const statusInfo = statusConfig[status];\r\n  const IconComponent = statusInfo.icon;\r\n\r\n  const sizeClasses = {\r\n    sm: 'text-xs px-1.5 py-0.5',\r\n    md: 'text-sm px-2 py-1',\r\n    lg: 'text-base px-3 py-1.5'\r\n  };\r\n\r\n  const iconSizes = {\r\n    sm: 'h-3 w-3',\r\n    md: 'h-4 w-4',\r\n    lg: 'h-5 w-5'\r\n  };\r\n\r\n  // Badge variant\r\n  if (variant === 'badge') {\r\n    const badge = (\r\n      <Badge\r\n        className={cn(\r\n          statusInfo.color,\r\n          statusInfo.borderColor,\r\n          sizeClasses[size],\r\n          'font-medium border flex items-center gap-1',\r\n          className\r\n        )}\r\n      >\r\n        <IconComponent className={iconSizes[size]} />\r\n        {standardInfo.label}\r\n      </Badge>\r\n    );\r\n\r\n    if (!showDetails) {\r\n      return badge;\r\n    }\r\n\r\n    return (\r\n      <TooltipProvider>\r\n        <Tooltip>\r\n          <TooltipTrigger asChild>\r\n            {badge}\r\n          </TooltipTrigger>\r\n          <TooltipContent>\r\n            <div className=\"text-sm\">\r\n              <div className=\"font-medium\">{standardInfo.fullName}</div>\r\n              <div className=\"text-muted-foreground mt-1\">\r\n                Status: {statusInfo.label}\r\n              </div>\r\n              {threshold && currentValue && (\r\n                <div className=\"mt-2 text-xs\">\r\n                  <div>Current: {currentValue.toFixed(1)}</div>\r\n                  <div>Threshold: {threshold.toFixed(1)}</div>\r\n                </div>\r\n              )}\r\n              <div className=\"mt-2 max-w-xs text-xs\">\r\n                {standardInfo.description}\r\n              </div>\r\n            </div>\r\n          </TooltipContent>\r\n        </Tooltip>\r\n      </TooltipProvider>\r\n    );\r\n  }\r\n\r\n  // Alert variant\r\n  if (variant === 'alert') {\r\n    return (\r\n      <Alert className={cn(statusInfo.borderColor, className)} variant={statusInfo.alertVariant}>\r\n        <IconComponent className=\"h-4 w-4\" />\r\n        <AlertDescription>\r\n          <div className=\"flex justify-between items-start\">\r\n            <div>\r\n              <span className=\"font-medium\">{standardInfo.label}</span>\r\n              <span className=\"ml-2\">{statusInfo.label}</span>\r\n            </div>\r\n            {threshold && currentValue && (\r\n              <div className=\"text-xs text-muted-foreground\">\r\n                {currentValue.toFixed(1)} / {threshold.toFixed(1)}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </AlertDescription>\r\n      </Alert>\r\n    );\r\n  }\r\n\r\n  // Indicator variant (simple icon)\r\n  return (\r\n    <div className={cn('flex items-center gap-1', className)}>\r\n      <IconComponent className={cn(iconSizes[size], statusInfo.color.replace('bg-', 'text-').replace('-100', '-600'))} />\r\n      {showDetails && (\r\n        <span className={cn('text-sm', statusInfo.color.replace('bg-', 'text-').replace('-100', '-600'))}>\r\n          {standardInfo.label}\r\n        </span>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ComplianceFlag;","\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { Alert, AlertDescription, AlertTitle } from \"@/components/ui/alert\";\r\nimport { Progress } from \"@/components/ui/progress\";\r\nimport { Leaf, AlertTriangle } from \"lucide-react\";\r\nimport { CalculationResult } from \"@/lib/carbonCalculations\";\r\nimport ScopeBadge, { EmissionScope } from \"@/components/ui/scope-badge\";\r\nimport EmbodiedCarbonClassifier from \"@/components/ui/embodied-carbon-classifier\";\r\nimport ComplianceFlag from \"@/components/ui/compliance-flag\";\r\n\r\ninterface SummaryCardProps {\r\n  result: CalculationResult;\r\n  scopeBreakdown?: {\r\n    scope1: number;\r\n    scope2: number; \r\n    scope3: number;\r\n  };\r\n  complianceStatus?: {\r\n    ncc2025: 'compliant' | 'warning' | 'breach';\r\n    nabers: 'compliant' | 'warning' | 'breach';\r\n    greenstar: 'compliant' | 'warning' | 'breach';\r\n  };\r\n}\r\n\r\nconst SummaryCard = ({ result, scopeBreakdown, complianceStatus }: SummaryCardProps) => {\r\n  // Calculate emission intensity category\r\n  let intensityCategory = 'moderate';\r\n  const emissionsPerUnit = result.totalEmissions;\r\n  \r\n  if (emissionsPerUnit < 100) {\r\n    intensityCategory = 'low';\r\n  } else if (emissionsPerUnit > 500) {\r\n    intensityCategory = 'high';\r\n  }\r\n\r\n  // Calculate average carbon intensity for EC classification\r\n  const averageCarbonIntensity = emissionsPerUnit / 1000; // Convert to reasonable scale for classification\r\n\r\n  return (\r\n    <Card className=\"border-carbon-200\">\r\n      <CardHeader>\r\n        <CardTitle>Total Carbon Footprint</CardTitle>\r\n        <CardDescription>\r\n          The overall environmental impact of your project\r\n        </CardDescription>\r\n      </CardHeader>\r\n      <CardContent className=\"space-y-4\">\r\n        {/* Total Emissions with Scope Badges */}\r\n        <div className=\"text-center space-y-3\">\r\n          <div>\r\n            <span className=\"text-5xl font-bold text-carbon-600\">\r\n              {result.totalEmissions.toFixed(2)}\r\n            </span>\r\n            <span className=\"text-lg ml-2\">kg CO2e</span>\r\n          </div>\r\n          \r\n          {/* Embodied Carbon Classification */}\r\n          <div className=\"flex justify-center\">\r\n            <EmbodiedCarbonClassifier \r\n              carbonIntensity={averageCarbonIntensity}\r\n              size=\"lg\"\r\n            />\r\n          </div>\r\n\r\n          {/* Scope Breakdown */}\r\n          {scopeBreakdown && (\r\n            <div className=\"flex justify-center gap-2 flex-wrap\">\r\n              <ScopeBadge scope=\"scope1\" size=\"sm\" />\r\n              <ScopeBadge scope=\"scope2\" size=\"sm\" />\r\n              <ScopeBadge scope=\"scope3\" size=\"sm\" />\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Scope Emissions Breakdown */}\r\n        {scopeBreakdown && (\r\n          <div className=\"space-y-3\">\r\n            <div className=\"text-sm font-medium\">Emission Scopes Breakdown</div>\r\n            <div className=\"grid grid-cols-3 gap-3\">\r\n              <div className=\"text-center p-2 bg-red-50 rounded-lg\">\r\n                <ScopeBadge scope=\"scope1\" size=\"sm\" showTooltip={false} />\r\n                <div className=\"text-lg font-semibold mt-1\">{scopeBreakdown.scope1.toFixed(1)}</div>\r\n                <div className=\"text-xs text-muted-foreground\">kg CO₂e</div>\r\n              </div>\r\n              <div className=\"text-center p-2 bg-orange-50 rounded-lg\">\r\n                <ScopeBadge scope=\"scope2\" size=\"sm\" showTooltip={false} />\r\n                <div className=\"text-lg font-semibold mt-1\">{scopeBreakdown.scope2.toFixed(1)}</div>\r\n                <div className=\"text-xs text-muted-foreground\">kg CO₂e</div>\r\n              </div>\r\n              <div className=\"text-center p-2 bg-blue-50 rounded-lg\">\r\n                <ScopeBadge scope=\"scope3\" size=\"sm\" showTooltip={false} />\r\n                <div className=\"text-lg font-semibold mt-1\">{scopeBreakdown.scope3.toFixed(1)}</div>\r\n                <div className=\"text-xs text-muted-foreground\">kg CO₂e</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Compliance Status Flags */}\r\n        {complianceStatus && (\r\n          <div className=\"space-y-3\">\r\n            <div className=\"text-sm font-medium\">Regulatory Compliance</div>\r\n            <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-2\">\r\n              <ComplianceFlag \r\n                standard=\"ncc2025\" \r\n                status={complianceStatus.ncc2025}\r\n                variant=\"alert\"\r\n                size=\"sm\"\r\n              />\r\n              <ComplianceFlag \r\n                standard=\"nabers\" \r\n                status={complianceStatus.nabers}\r\n                variant=\"alert\"\r\n                size=\"sm\"\r\n              />\r\n              <ComplianceFlag \r\n                standard=\"greenstar\" \r\n                status={complianceStatus.greenstar}\r\n                variant=\"alert\"\r\n                size=\"sm\"\r\n              />\r\n            </div>\r\n          </div>\r\n        )}\r\n        \r\n        <Alert className={\r\n          intensityCategory === 'low' \r\n            ? \"border-carbon-500 bg-carbon-50 text-carbon-800\" \r\n            : intensityCategory === 'high'\r\n              ? \"border-red-500 bg-red-50 text-red-800\"\r\n              : \"border-yellow-500 bg-yellow-50 text-yellow-800\"\r\n        }>\r\n          <div className=\"flex items-center gap-2\">\r\n            {intensityCategory === 'low' ? (\r\n              <Leaf className=\"h-4 w-4\" />\r\n            ) : (\r\n              <AlertTriangle className=\"h-4 w-4\" />\r\n            )}\r\n            <AlertTitle className=\"font-medium\">\r\n              {intensityCategory === 'low' \r\n                ? 'Low Carbon Intensity' \r\n                : intensityCategory === 'high'\r\n                  ? 'High Carbon Intensity'\r\n                  : 'Moderate Carbon Intensity'\r\n              }\r\n            </AlertTitle>\r\n          </div>\r\n          <AlertDescription className=\"mt-2 text-sm\">\r\n            {intensityCategory === 'low' \r\n              ? 'Great job! Your project has relatively low carbon emissions. Continue these sustainable practices in future projects.'\r\n              : intensityCategory === 'high'\r\n                ? 'Your project has a significant carbon footprint. Consider implementing the suggested improvements to reduce emissions.'\r\n                : 'Your project has a moderate carbon footprint. There is room for improvement - check the suggestions below.'\r\n            }\r\n          </AlertDescription>\r\n        </Alert>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default SummaryCard;\r\n","import React from 'react';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Card, CardContent } from '@/components/ui/card';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { cn } from '@/lib/utils';\r\nimport { Package, Truck, Recycle } from 'lucide-react';\r\n\r\nexport type LifecyclePhase = 'embodied' | 'transport' | 'end-of-life' | 'all';\r\n\r\ninterface LifecyclePhaseFilterProps {\r\n  activePhase: LifecyclePhase;\r\n  onPhaseChange: (phase: LifecyclePhase) => void;\r\n  emissionsByPhase?: {\r\n    embodied: number;\r\n    transport: number;\r\n    endOfLife: number;\r\n  };\r\n  className?: string;\r\n}\r\n\r\nconst phaseConfig = {\r\n  embodied: {\r\n    label: 'Embodied Carbon',\r\n    shortLabel: 'Embodied',\r\n    icon: Package,\r\n    color: 'text-green-600',\r\n    bgColor: 'bg-green-50 border-green-200',\r\n    activeColor: 'bg-green-500 text-white',\r\n    description: 'Cradle-to-gate emissions (A1-A3)'\r\n  },\r\n  transport: {\r\n    label: 'Transport',\r\n    shortLabel: 'Transport', \r\n    icon: Truck,\r\n    color: 'text-blue-600',\r\n    bgColor: 'bg-blue-50 border-blue-200',\r\n    activeColor: 'bg-blue-500 text-white',\r\n    description: 'Transport to site (A4)'\r\n  },\r\n  'end-of-life': {\r\n    label: 'End-of-Life',\r\n    shortLabel: 'EOL',\r\n    icon: Recycle,\r\n    color: 'text-purple-600', \r\n    bgColor: 'bg-purple-50 border-purple-200',\r\n    activeColor: 'bg-purple-500 text-white',\r\n    description: 'Disposal and benefits (C1-C4, D)'\r\n  },\r\n  all: {\r\n    label: 'All Phases',\r\n    shortLabel: 'All',\r\n    icon: Package,\r\n    color: 'text-gray-600',\r\n    bgColor: 'bg-gray-50 border-gray-200', \r\n    activeColor: 'bg-gray-500 text-white',\r\n    description: 'Complete lifecycle assessment'\r\n  }\r\n};\r\n\r\nconst LifecyclePhaseFilter: React.FC<LifecyclePhaseFilterProps> = ({\r\n  activePhase,\r\n  onPhaseChange,\r\n  emissionsByPhase,\r\n  className\r\n}) => {\r\n  const phases: LifecyclePhase[] = ['all', 'embodied', 'transport', 'end-of-life'];\r\n\r\n  const formatEmissions = (value: number) => {\r\n    if (value < 1000) return `${value.toFixed(1)} kg`;\r\n    return `${(value / 1000).toFixed(1)} t`;\r\n  };\r\n\r\n  return (\r\n    <Card className={cn('overflow-hidden', className)}>\r\n      <CardContent className=\"p-4\">\r\n        <div className=\"space-y-3\">\r\n          <div className=\"text-sm font-medium text-muted-foreground\">\r\n            Lifecycle Phase Filter\r\n          </div>\r\n          \r\n          <div className=\"grid grid-cols-2 lg:grid-cols-4 gap-2\">\r\n            {phases.map((phase) => {\r\n              const config = phaseConfig[phase];\r\n              const IconComponent = config.icon;\r\n              const isActive = activePhase === phase;\r\n              \r\n              let emissions = 0;\r\n              if (emissionsByPhase && phase !== 'all') {\r\n                switch (phase) {\r\n                  case 'embodied':\r\n                    emissions = emissionsByPhase.embodied;\r\n                    break;\r\n                  case 'transport':\r\n                    emissions = emissionsByPhase.transport;\r\n                    break;\r\n                  case 'end-of-life':\r\n                    emissions = emissionsByPhase.endOfLife;\r\n                    break;\r\n                }\r\n              } else if (emissionsByPhase && phase === 'all') {\r\n                emissions = emissionsByPhase.embodied + emissionsByPhase.transport + emissionsByPhase.endOfLife;\r\n              }\r\n\r\n              return (\r\n                <Button\r\n                  key={phase}\r\n                  variant={isActive ? \"default\" : \"outline\"}\r\n                  size=\"sm\"\r\n                  onClick={() => onPhaseChange(phase)}\r\n                  className={cn(\r\n                    'flex flex-col h-auto p-3 text-center transition-all duration-200',\r\n                    isActive \r\n                      ? config.activeColor\r\n                      : `${config.bgColor} hover:${config.activeColor} ${config.color}`\r\n                  )}\r\n                >\r\n                  <IconComponent className=\"h-4 w-4 mb-1\" />\r\n                  <span className=\"text-xs font-medium mb-1\">\r\n                    {config.shortLabel}\r\n                  </span>\r\n                  {emissionsByPhase && (\r\n                    <Badge \r\n                      variant=\"secondary\" \r\n                      className={cn(\r\n                        'text-xs px-1 py-0',\r\n                        isActive ? 'bg-white/20 text-white' : 'bg-white/50'\r\n                      )}\r\n                    >\r\n                      {formatEmissions(emissions)}\r\n                    </Badge>\r\n                  )}\r\n                </Button>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default LifecyclePhaseFilter;","import React, { useState } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Switch } from '@/components/ui/switch';\r\nimport { Progress } from '@/components/ui/progress';\r\nimport { cn } from '@/lib/utils';\r\nimport { TrendingDown, TrendingUp, BarChart3, ArrowRight } from 'lucide-react';\r\nimport { ExtendedMaterialData } from '@/lib/materials/materialTypes';\r\nimport EmbodiedCarbonClassifier from './embodied-carbon-classifier';\r\n\r\ninterface MaterialComparisonData {\r\n  material: ExtendedMaterialData;\r\n  isSelected?: boolean;\r\n  isAlternative?: boolean;\r\n  potentialSaving?: number; // percentage reduction\r\n  availabilityScore?: number; // 0-100\r\n}\r\n\r\ninterface MaterialComparisonToggleProps {\r\n  baseMaterial: ExtendedMaterialData;\r\n  alternatives?: ExtendedMaterialData[];\r\n  industryBenchmark?: {\r\n    averageCarbon: number;\r\n    percentileBetter: number;\r\n  };\r\n  onToggleComparison: (enabled: boolean) => void;\r\n  onSelectAlternative?: (material: ExtendedMaterialData) => void;\r\n  comparisonEnabled?: boolean;\r\n  className?: string;\r\n}\r\n\r\nconst MaterialComparisonToggle: React.FC<MaterialComparisonToggleProps> = ({\r\n  baseMaterial,\r\n  alternatives = [],\r\n  industryBenchmark,\r\n  onToggleComparison,\r\n  onSelectAlternative,\r\n  comparisonEnabled = false,\r\n  className\r\n}) => {\r\n  const [selectedAlternatives, setSelectedAlternatives] = useState<string[]>([]);\r\n\r\n  const baseCarbon = baseMaterial.carbon_footprint_kgco2e_kg || baseMaterial.factor || 0;\r\n  \r\n  const calculateSaving = (altCarbon: number) => {\r\n    if (baseCarbon === 0) return 0;\r\n    return Math.max(0, ((baseCarbon - altCarbon) / baseCarbon) * 100);\r\n  };\r\n\r\n  const toggleAlternativeSelection = (materialId: string) => {\r\n    setSelectedAlternatives(prev => \r\n      prev.includes(materialId) \r\n        ? prev.filter(id => id !== materialId)\r\n        : [...prev, materialId]\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Card className={cn('overflow-hidden', className)}>\r\n      <CardHeader className=\"pb-3\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <CardTitle className=\"text-lg\">Material Comparison</CardTitle>\r\n          <div className=\"flex items-center space-x-2\">\r\n            <span className=\"text-sm text-muted-foreground\">Compare alternatives</span>\r\n            <Switch\r\n              checked={comparisonEnabled}\r\n              onCheckedChange={onToggleComparison}\r\n            />\r\n          </div>\r\n        </div>\r\n      </CardHeader>\r\n\r\n      <CardContent className=\"space-y-4\">\r\n        {/* Base Material */}\r\n        <div className=\"p-3 bg-muted/50 rounded-lg border\">\r\n          <div className=\"flex items-center justify-between mb-2\">\r\n            <div className=\"font-medium text-sm\">Current Selection</div>\r\n            <EmbodiedCarbonClassifier \r\n              carbonIntensity={baseCarbon}\r\n              size=\"sm\"\r\n            />\r\n          </div>\r\n          <div className=\"text-lg font-semibold\">{baseMaterial.name}</div>\r\n          <div className=\"text-sm text-muted-foreground\">\r\n            {baseCarbon.toFixed(2)} kg CO₂e/kg\r\n          </div>\r\n        </div>\r\n\r\n        {comparisonEnabled && (\r\n          <>\r\n            {/* Industry Benchmark */}\r\n            {industryBenchmark && (\r\n              <div className=\"space-y-2\">\r\n                <div className=\"text-sm font-medium\">Industry Benchmark</div>\r\n                <div className=\"flex items-center justify-between p-3 bg-blue-50 rounded-lg border border-blue-200\">\r\n                  <div>\r\n                    <div className=\"text-sm font-medium\">Industry Average</div>\r\n                    <div className=\"text-xs text-muted-foreground\">\r\n                      {industryBenchmark.averageCarbon.toFixed(2)} kg CO₂e/kg\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"text-right\">\r\n                    <div className=\"flex items-center gap-1\">\r\n                      {baseCarbon < industryBenchmark.averageCarbon ? (\r\n                        <TrendingDown className=\"h-4 w-4 text-green-600\" />\r\n                      ) : (\r\n                        <TrendingUp className=\"h-4 w-4 text-red-600\" />\r\n                      )}\r\n                      <Badge \r\n                        variant=\"secondary\"\r\n                        className={baseCarbon < industryBenchmark.averageCarbon ? 'text-green-700' : 'text-red-700'}\r\n                      >\r\n                        {industryBenchmark.percentileBetter}% better\r\n                      </Badge>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Alternative Materials */}\r\n            {alternatives.length > 0 && (\r\n              <div className=\"space-y-3\">\r\n                <div className=\"text-sm font-medium\">Alternative Materials</div>\r\n                <div className=\"space-y-2 max-h-64 overflow-y-auto\">\r\n                  {alternatives.map((alt) => {\r\n                    const altCarbon = alt.carbon_footprint_kgco2e_kg || alt.factor || 0;\r\n                    const saving = calculateSaving(altCarbon);\r\n                    const isSelected = selectedAlternatives.includes(alt.id || '');\r\n                    \r\n                    return (\r\n                      <div\r\n                        key={alt.id}\r\n                        className={cn(\r\n                          'p-3 rounded-lg border transition-all cursor-pointer',\r\n                          isSelected \r\n                            ? 'bg-green-50 border-green-200' \r\n                            : 'bg-card hover:bg-muted/50'\r\n                        )}\r\n                        onClick={() => alt.id && toggleAlternativeSelection(alt.id)}\r\n                      >\r\n                        <div className=\"flex items-center justify-between mb-2\">\r\n                          <div className=\"font-medium text-sm\">{alt.name}</div>\r\n                          <div className=\"flex items-center gap-2\">\r\n                            <EmbodiedCarbonClassifier \r\n                              carbonIntensity={altCarbon}\r\n                              size=\"sm\"\r\n                            />\r\n                            {saving > 0 && (\r\n                              <Badge variant=\"outline\" className=\"text-green-700 border-green-300\">\r\n                                -{saving.toFixed(0)}%\r\n                              </Badge>\r\n                            )}\r\n                          </div>\r\n                        </div>\r\n                        \r\n                        <div className=\"flex items-center justify-between text-xs text-muted-foreground\">\r\n                          <span>{altCarbon.toFixed(2)} kg CO₂e/kg</span>\r\n                          {saving > 0 && (\r\n                            <span className=\"text-green-600 font-medium\">\r\n                              Save {(baseCarbon - altCarbon).toFixed(2)} kg CO₂e/kg\r\n                            </span>\r\n                          )}\r\n                        </div>\r\n\r\n                        {/* Potential Impact Bar */}\r\n                        {saving > 0 && (\r\n                          <div className=\"mt-2\">\r\n                            <div className=\"flex justify-between text-xs mb-1\">\r\n                              <span>Carbon Reduction</span>\r\n                              <span>{saving.toFixed(0)}%</span>\r\n                            </div>\r\n                            <Progress value={Math.min(saving, 100)} className=\"h-1\" />\r\n                          </div>\r\n                        )}\r\n\r\n                        {/* Action Buttons */}\r\n                        {isSelected && (\r\n                          <div className=\"mt-3 flex gap-2\">\r\n                            <Button \r\n                              size=\"sm\" \r\n                              variant=\"outline\"\r\n                              onClick={(e) => {\r\n                                e.stopPropagation();\r\n                                onSelectAlternative?.(alt);\r\n                              }}\r\n                              className=\"flex-1\"\r\n                            >\r\n                              <ArrowRight className=\"h-3 w-3 mr-1\" />\r\n                              Select This Material\r\n                            </Button>\r\n                            <Button \r\n                              size=\"sm\" \r\n                              variant=\"ghost\"\r\n                              onClick={(e) => {\r\n                                e.stopPropagation();\r\n                                // Could open detailed comparison modal\r\n                              }}\r\n                            >\r\n                              <BarChart3 className=\"h-3 w-3\" />\r\n                            </Button>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {alternatives.length === 0 && (\r\n              <div className=\"text-center py-4 text-muted-foreground\">\r\n                <BarChart3 className=\"h-8 w-8 mx-auto mb-2 opacity-50\" />\r\n                <div className=\"text-sm\">No alternatives available</div>\r\n                <div className=\"text-xs\">Check the material database for similar options</div>\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default MaterialComparisonToggle;","import React, { useState } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\r\nimport { CalculationResult } from '@/lib/carbonCalculations';\r\nimport { ExtendedMaterialData } from '@/lib/materials/materialTypes';\r\n\r\nimport SummaryCard from '@/components/results/SummaryCard';\r\nimport LifecyclePhaseFilter, { LifecyclePhase } from '@/components/ui/lifecycle-phase-filter';\r\nimport MaterialComparisonToggle from '@/components/ui/material-comparison-toggle';\r\nimport { Progress } from '@/components/ui/progress';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { TrendingDown, TrendingUp, BarChart3 } from 'lucide-react';\r\n\r\ninterface EnhancedCalculatorResultsProps {\r\n  result: CalculationResult;\r\n  materials: ExtendedMaterialData[];\r\n  onMaterialSelect?: (material: ExtendedMaterialData) => void;\r\n}\r\n\r\nconst EnhancedCalculatorResults: React.FC<EnhancedCalculatorResultsProps> = ({\r\n  result,\r\n  materials,\r\n  onMaterialSelect\r\n}) => {\r\n  const [activeLifecyclePhase, setActiveLifecyclePhase] = useState<LifecyclePhase>('all');\r\n  const [comparisonEnabled, setComparisonEnabled] = useState(false);\r\n  const [selectedMaterialForComparison, setSelectedMaterialForComparison] = useState<ExtendedMaterialData | null>(null);\r\n\r\n  // Calculate scope breakdown from materials\r\n  const calculateScopeBreakdown = () => {\r\n    let scope1 = 0, scope2 = 0, scope3 = 0;\r\n    \r\n    materials.forEach(material => {\r\n      const carbonValue = material.carbon_footprint_kgco2e_kg || material.factor || 0;\r\n      const scopeEmissions = {\r\n        scope1: material.scope1_emissions || 0,\r\n        scope2: material.scope2_emissions || 0,\r\n        scope3: material.scope3_emissions || 0\r\n      };\r\n      \r\n      // If no specific scope data, distribute based on typical patterns\r\n      if (!scopeEmissions.scope1 && !scopeEmissions.scope2 && !scopeEmissions.scope3) {\r\n        scope1 += carbonValue * 0.1; // ~10% direct\r\n        scope2 += carbonValue * 0.2; // ~20% energy\r\n        scope3 += carbonValue * 0.7; // ~70% value chain\r\n      } else {\r\n        scope1 += scopeEmissions.scope1;\r\n        scope2 += scopeEmissions.scope2;\r\n        scope3 += scopeEmissions.scope3;\r\n      }\r\n    });\r\n    \r\n    return { scope1, scope2, scope3 };\r\n  };\r\n\r\n  // Calculate lifecycle phase emissions\r\n  const calculateLifecycleEmissions = () => {\r\n    const embodiedTotal = materials.reduce((sum, material) => {\r\n      const carbon = material.carbon_footprint_kgco2e_kg || material.factor || 0;\r\n      return sum + (material.lifecycle_stage === 'cradle-to-gate' ? carbon : carbon * 0.7);\r\n    }, 0);\r\n    \r\n    const transportTotal = result.transportEmissions || 0;\r\n    const endOfLifeTotal = materials.reduce((sum, material) => {\r\n      const carbon = material.carbon_footprint_kgco2e_kg || material.factor || 0;\r\n      return sum + carbon * 0.1; // Estimate 10% for end-of-life\r\n    }, 0);\r\n    \r\n    return {\r\n      embodied: embodiedTotal,\r\n      transport: transportTotal,\r\n      endOfLife: endOfLifeTotal\r\n    };\r\n  };\r\n\r\n  // Mock compliance status - in real app this would come from compliance service\r\n  const mockComplianceStatus = {\r\n    ncc2025: result.totalEmissions < 1000 ? 'compliant' as const : 'warning' as const,\r\n    nabers: result.totalEmissions < 800 ? 'compliant' as const : 'breach' as const,\r\n    greenstar: result.totalEmissions < 600 ? 'compliant' as const : 'warning' as const\r\n  };\r\n\r\n  const scopeBreakdown = calculateScopeBreakdown();\r\n  const lifecycleEmissions = calculateLifecycleEmissions();\r\n\r\n  // Filter results based on lifecycle phase\r\n  const getFilteredResults = () => {\r\n    if (activeLifecyclePhase === 'all') return result;\r\n    \r\n    const filtered = { ...result };\r\n    switch (activeLifecyclePhase) {\r\n      case 'embodied':\r\n        filtered.totalEmissions = lifecycleEmissions.embodied;\r\n        break;\r\n      case 'transport':\r\n        filtered.totalEmissions = lifecycleEmissions.transport;\r\n        break;\r\n      case 'end-of-life':\r\n        filtered.totalEmissions = lifecycleEmissions.endOfLife;\r\n        break;\r\n    }\r\n    return filtered;\r\n  };\r\n\r\n  const filteredResults = getFilteredResults();\r\n\r\n  // Get high-impact materials for comparison\r\n  const getHighImpactMaterials = () => {\r\n    return materials\r\n      .filter(m => (m.carbon_footprint_kgco2e_kg || m.factor || 0) > 50)\r\n      .sort((a, b) => (b.carbon_footprint_kgco2e_kg || b.factor || 0) - (a.carbon_footprint_kgco2e_kg || a.factor || 0))\r\n      .slice(0, 5);\r\n  };\r\n\r\n  const highImpactMaterials = getHighImpactMaterials();\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Lifecycle Phase Filter */}\r\n      <LifecyclePhaseFilter\r\n        activePhase={activeLifecyclePhase}\r\n        onPhaseChange={setActiveLifecyclePhase}\r\n        emissionsByPhase={lifecycleEmissions}\r\n      />\r\n\r\n      {/* Enhanced Summary Card */}\r\n      <SummaryCard \r\n        result={filteredResults}\r\n        scopeBreakdown={scopeBreakdown}\r\n        complianceStatus={mockComplianceStatus}\r\n      />\r\n\r\n      <Tabs defaultValue=\"breakdown\" className=\"space-y-4\">\r\n        <TabsList className=\"grid w-full grid-cols-4\">\r\n          <TabsTrigger value=\"breakdown\">Breakdown</TabsTrigger>\r\n          <TabsTrigger value=\"materials\">Materials</TabsTrigger>\r\n          <TabsTrigger value=\"comparison\">Comparison</TabsTrigger>\r\n          <TabsTrigger value=\"insights\">Insights</TabsTrigger>\r\n        </TabsList>\r\n\r\n        <TabsContent value=\"breakdown\" className=\"space-y-4\">\r\n          {/* Detailed Breakdown Charts */}\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center gap-2\">\r\n                  <BarChart3 className=\"h-5 w-5\" />\r\n                  Emissions by Category\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-3\">\r\n                <div className=\"space-y-2\">\r\n                  <div className=\"flex justify-between text-sm\">\r\n                    <span>Materials</span>\r\n                    <span>{result.materialEmissions?.toFixed(1) || 0} kg CO₂e</span>\r\n                  </div>\r\n                  <Progress value={(result.materialEmissions / result.totalEmissions) * 100} />\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <div className=\"flex justify-between text-sm\">\r\n                    <span>Transport</span>\r\n                    <span>{result.transportEmissions?.toFixed(1) || 0} kg CO₂e</span>\r\n                  </div>\r\n                  <Progress value={(result.transportEmissions / result.totalEmissions) * 100} />\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <div className=\"flex justify-between text-sm\">\r\n                    <span>Energy</span>\r\n                    <span>{result.energyEmissions?.toFixed(1) || 0} kg CO₂e</span>\r\n                  </div>\r\n                  <Progress value={(result.energyEmissions / result.totalEmissions) * 100} />\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Lifecycle Phases</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-3\">\r\n                <div className=\"space-y-2\">\r\n                  <div className=\"flex justify-between text-sm\">\r\n                    <span>Embodied Carbon</span>\r\n                    <span>{lifecycleEmissions.embodied.toFixed(1)} kg CO₂e</span>\r\n                  </div>\r\n                  <Progress value={(lifecycleEmissions.embodied / result.totalEmissions) * 100} />\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <div className=\"flex justify-between text-sm\">\r\n                    <span>Transport</span>\r\n                    <span>{lifecycleEmissions.transport.toFixed(1)} kg CO₂e</span>\r\n                  </div>\r\n                  <Progress value={(lifecycleEmissions.transport / result.totalEmissions) * 100} />\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <div className=\"flex justify-between text-sm\">\r\n                    <span>End-of-Life</span>\r\n                    <span>{lifecycleEmissions.endOfLife.toFixed(1)} kg CO₂e</span>\r\n                  </div>\r\n                  <Progress value={(lifecycleEmissions.endOfLife / result.totalEmissions) * 100} />\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"materials\" className=\"space-y-4\">\r\n          {/* High-Impact Materials */}\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>High-Impact Materials</CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"space-y-3\">\r\n                {highImpactMaterials.map((material, index) => (\r\n                  <div key={material.id || index} className=\"flex justify-between items-center p-3 bg-muted/50 rounded-lg\">\r\n                    <div>\r\n                      <div className=\"font-medium\">{material.name}</div>\r\n                      <div className=\"text-sm text-muted-foreground\">\r\n                        {(material.carbon_footprint_kgco2e_kg || material.factor || 0).toFixed(2)} kg CO₂e/kg\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <Badge variant=\"outline\">\r\n                        {index === 0 ? 'Highest' : `#${index + 1}`}\r\n                      </Badge>\r\n                      {(material.carbon_footprint_kgco2e_kg || material.factor || 0) > 100 && (\r\n                        <TrendingUp className=\"h-4 w-4 text-red-500\" />\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"comparison\" className=\"space-y-4\">\r\n          {/* Material Comparison */}\r\n          {selectedMaterialForComparison ? (\r\n            <MaterialComparisonToggle\r\n              baseMaterial={selectedMaterialForComparison}\r\n              alternatives={materials.filter(m => \r\n                m.category === selectedMaterialForComparison.category && \r\n                m.id !== selectedMaterialForComparison.id\r\n              )}\r\n              industryBenchmark={{\r\n                averageCarbon: 75,\r\n                percentileBetter: 25\r\n              }}\r\n              onToggleComparison={setComparisonEnabled}\r\n              onSelectAlternative={onMaterialSelect}\r\n              comparisonEnabled={comparisonEnabled}\r\n            />\r\n          ) : (\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Material Comparison</CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"text-center py-8 text-muted-foreground\">\r\n                  <BarChart3 className=\"h-12 w-12 mx-auto mb-4 opacity-50\" />\r\n                  <div>Select a material from the Materials tab to compare alternatives</div>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          )}\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"insights\" className=\"space-y-4\">\r\n          {/* AI-powered insights */}\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Optimization Opportunities</CardTitle>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-4\">\r\n              <div className=\"p-4 bg-green-50 rounded-lg border border-green-200\">\r\n                <div className=\"flex items-center gap-2 mb-2\">\r\n                  <TrendingDown className=\"h-4 w-4 text-green-600\" />\r\n                  <span className=\"font-medium text-green-800\">Potential 15% Reduction</span>\r\n                </div>\r\n                <p className=\"text-sm text-green-700\">\r\n                  Replace high-carbon concrete with recycled aggregate mix to reduce embodied carbon.\r\n                </p>\r\n              </div>\r\n              \r\n              <div className=\"p-4 bg-blue-50 rounded-lg border border-blue-200\">\r\n                <div className=\"flex items-center gap-2 mb-2\">\r\n                  <BarChart3 className=\"h-4 w-4 text-blue-600\" />\r\n                  <span className=\"font-medium text-blue-800\">Transport Optimization</span>\r\n                </div>\r\n                <p className=\"text-sm text-blue-700\">\r\n                  Source materials locally to reduce transport emissions by up to 8%.\r\n                </p>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EnhancedCalculatorResults;"],"names":["scopeConfig","ScopeBadge","scope","size","showTooltip","className","config","sizeClasses","badge","jsx","Badge","cn","TooltipProvider","jsxs","Tooltip","TooltipTrigger","TooltipContent","THRESHOLDS","getClassification","intensity","classificationConfig","Leaf","AlertTriangle","XCircle","EmbodiedCarbonClassifier","carbonIntensity","showIcon","classification","IconComponent","iconSizes","standardConfig","statusConfig","CheckCircle","Shield","ComplianceFlag","standard","status","threshold","currentValue","variant","showDetails","standardInfo","statusInfo","Alert","AlertDescription","SummaryCard","result","scopeBreakdown","complianceStatus","intensityCategory","emissionsPerUnit","averageCarbonIntensity","Card","CardHeader","CardTitle","CardDescription","CardContent","AlertTitle","phaseConfig","Package","Truck","Recycle","LifecyclePhaseFilter","activePhase","onPhaseChange","emissionsByPhase","phases","formatEmissions","value","phase","isActive","emissions","Button","MaterialComparisonToggle","baseMaterial","alternatives","industryBenchmark","onToggleComparison","onSelectAlternative","comparisonEnabled","selectedAlternatives","setSelectedAlternatives","useState","baseCarbon","calculateSaving","altCarbon","toggleAlternativeSelection","materialId","prev","id","Switch","Fragment","TrendingDown","TrendingUp","alt","saving","isSelected","Progress","e","ArrowRight","BarChart3","EnhancedCalculatorResults","materials","onMaterialSelect","activeLifecyclePhase","setActiveLifecyclePhase","setComparisonEnabled","selectedMaterialForComparison","setSelectedMaterialForComparison","calculateScopeBreakdown","scope1","scope2","scope3","material","carbonValue","scopeEmissions","calculateLifecycleEmissions","embodiedTotal","sum","carbon","transportTotal","endOfLifeTotal","mockComplianceStatus","lifecycleEmissions","filteredResults","filtered","highImpactMaterials","m","a","Tabs","TabsList","TabsTrigger","TabsContent","_a","_b","_c","index"],"mappings":"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"}